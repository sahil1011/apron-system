/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package my.allocation;

import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Date;

import static my.allocation.EntryPage.apron_domestic;
import static my.allocation.EntryPage.apron_international;
import static my.allocation.EntryPage.apron_cargo;
import static my.allocation.EntryPage.pm1;
import static my.allocation.EntryPage.pm2;
import static my.allocation.EntryPage.pm3;
import static my.allocation.ActivityLog.activity;
import static my.allocation.ActivityLog.acttop;

/**
 *
 * @author Lenovo
 */
public class remove extends javax.swing.JFrame {

    /**
     * Creates new form remove
     */
    public remove() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jComboBox1 = new javax.swing.JComboBox();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new java.awt.GridBagLayout());

        jPanel2.setOpaque(false);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setText("Removing a plane from Apron");
        jLabel1.setOpaque(true);

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel3.setText("Serial Number:");
        jLabel3.setOpaque(true);

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel4.setText("Apron:");
        jLabel4.setOpaque(true);

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Choose any one", "Domestic Passenger", "International Passenger", "Cargo" }));

        jButton1.setText("Remove Plane");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Go Back");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel5.setForeground(java.awt.Color.white);

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel6.setText("To Remove a plane:");
        jLabel6.setOpaque(true);

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel7.setText("Apron Maps:");
        jLabel7.setOpaque(true);

        jButton3.setText("Apron-Domestic Passenger");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setText("Apron-International Passenger");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton5.setText("Apron-Cargo");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(163, 163, 163))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(151, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 294, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 291, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(155, 155, 155))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(18, 18, 18)
                        .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(40, 40, 40)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel6)
                                    .addComponent(jLabel7))))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(108, 108, 108)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jTextField1)
                    .addComponent(jComboBox1, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(124, 124, 124))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addComponent(jLabel1)
                .addGap(38, 38, 38)
                .addComponent(jLabel6)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(92, 92, 92)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 34, Short.MAX_VALUE)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(109, 109, 109)))
                .addComponent(jButton1)
                .addGap(34, 34, 34)
                .addComponent(jLabel7)
                .addGap(45, 45, 45)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton3)
                    .addComponent(jButton4)
                    .addComponent(jButton5))
                .addGap(49, 49, 49)
                .addComponent(jButton2)
                .addGap(7, 7, 7)
                .addComponent(jLabel5)
                .addContainerGap())
        );

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        getContentPane().add(jPanel2, gridBagConstraints);

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/my/allocation/image/Plane.jpg"))); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        getContentPane().add(jLabel2, gridBagConstraints);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        this.setVisible(false);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        
        if((jTextField1.getText().equals(""))||(jComboBox1.getSelectedIndex()==0))
        {
            jLabel5.setText("Enter correct details");
        }
        else
        {
            DateFormat dateFormat = new SimpleDateFormat("dd/MM/yyyy HH:mm:ss");
            Date date = new Date();
            String time=(dateFormat.format(date));
            int serial=Integer.parseInt(jTextField1.getText());
            activity[acttop]=time+"    COMMAND--REMOVE FROM APRON PLANE: "+serial;
            acttop++;
            if(jComboBox1.getSelectedIndex()==1)
            {
                for(int a=0;a<40;a++)
                {
                    if(apron_domestic[a]==serial)
                    {
                        apron_domestic[a]=0;
                        jLabel5.setText("Plane removed");
                        jTextField1.setText("");
                        jComboBox1.setSelectedIndex(0);
                    }       
                }
            }
            else if(jComboBox1.getSelectedIndex()==2)
            {
                for(int a=0;a<40;a++)
                {
                    if(apron_international[a]==serial)
                    {
                        apron_international[a]=0;
                        jLabel5.setText("Plane removed");
                        jTextField1.setText("");
                        jComboBox1.setSelectedIndex(0);
                    }
                }
            }
            else if(jComboBox1.getSelectedIndex()==3)
            {
                for(int a=0;a<40;a++)
                {
                    if(apron_cargo[a]==serial)
                    {
                        apron_cargo[a]=0;
                        jLabel5.setText("Plane removed");
                        jTextField1.setText("");
                        jComboBox1.setSelectedIndex(0);
                    }
                }
            }
            if(jComboBox1.getSelectedIndex()!=0)
            {
                jLabel5.setText("No plane found");
            }
            
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        
        pm1.setVisible(true);
        
        if(apron_domestic[0]!=0)
        {
            pm1.jLabel1.setForeground(java.awt.Color.red);
            pm1.jLabel1.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.red));
        }
        else
        {
            pm1.jLabel1.setForeground(java.awt.Color.green);
            pm1.jLabel1.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.green));
        }
        if(apron_domestic[1]!=0)
        {
            pm1.jLabel2.setForeground(java.awt.Color.red);
            pm1.jLabel2.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.red));
        }
        else
        {
            pm1.jLabel2.setForeground(java.awt.Color.green);
            pm1.jLabel2.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.green));
        }
        if(apron_domestic[2]!=0)
        {
            pm1.jLabel3.setForeground(java.awt.Color.red);
            pm1.jLabel3.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.red));
        }
        else
        {
            pm1.jLabel3.setForeground(java.awt.Color.green);
            pm1.jLabel3.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.green));
        }
        if(apron_domestic[3]!=0)
        {
            pm1.jLabel4.setForeground(java.awt.Color.red);
            pm1.jLabel4.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.red));
        }
        else
        {
            pm1.jLabel4.setForeground(java.awt.Color.green);
            pm1.jLabel4.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.green));
        }
        if(apron_domestic[4]!=0)
        {
            pm1.jLabel5.setForeground(java.awt.Color.red);
            pm1.jLabel5.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.red));
        }
        else
        {
            pm1.jLabel5.setForeground(java.awt.Color.green);
            pm1.jLabel5.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.green));
        }
        if(apron_domestic[5]!=0)
        {
            pm1.jLabel6.setForeground(java.awt.Color.red);
            pm1.jLabel6.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.red));
        }
        else
        {
            pm1.jLabel6.setForeground(java.awt.Color.green);
            pm1.jLabel6.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.green));
        }
        if(apron_domestic[6]!=0)
        {
            pm1.jLabel7.setForeground(java.awt.Color.red);
            pm1.jLabel7.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.red));
        }
        else
        {
            pm1.jLabel7.setForeground(java.awt.Color.green);
            pm1.jLabel7.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.green));
        }
        if(apron_domestic[7]!=0)
        {
            pm1.jLabel8.setForeground(java.awt.Color.red);
            pm1.jLabel8.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.red));
        }
        else
        {
            pm1.jLabel8.setForeground(java.awt.Color.green);
            pm1.jLabel8.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.green));
        }
        if(apron_domestic[8]!=0)
        {
            pm1.jLabel9.setForeground(java.awt.Color.red);
            pm1.jLabel9.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.red));
        }
        else
        {
            pm1.jLabel9.setForeground(java.awt.Color.green);
            pm1.jLabel9.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.green));
        }
        if(apron_domestic[9]!=0)
        {
            pm1.jLabel10.setForeground(java.awt.Color.red);
            pm1.jLabel10.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.red));
        }
        else
        {
            pm1.jLabel10.setForeground(java.awt.Color.green);
            pm1.jLabel10.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.green));
        }
        if(apron_domestic[10]!=0)
        {
            pm1.jLabel11.setForeground(java.awt.Color.red);
            pm1.jLabel11.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.red));
        }
        else
        {
            pm1.jLabel11.setForeground(java.awt.Color.green);
            pm1.jLabel11.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.green));
        }
        if(apron_domestic[11]!=0)
        {
            pm1.jLabel12.setForeground(java.awt.Color.red);
            pm1.jLabel12.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.red));
        }
        else
        {
            pm1.jLabel12.setForeground(java.awt.Color.green);
            pm1.jLabel12.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.green));
        }
        if(apron_domestic[12]!=0)
        {
            pm1.jLabel13.setForeground(java.awt.Color.red);
            pm1.jLabel13.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.red));
        }
        else
        {
            pm1.jLabel13.setForeground(java.awt.Color.green);
            pm1.jLabel13.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.green));
        }
        if(apron_domestic[13]!=0)
        {
            pm1.jLabel14.setForeground(java.awt.Color.red);
            pm1.jLabel14.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.red));
        }
        else
        {
            pm1.jLabel14.setForeground(java.awt.Color.green);
            pm1.jLabel14.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.green));
        }
        if(apron_domestic[14]!=0)
        {
            pm1.jLabel15.setForeground(java.awt.Color.red);
            pm1.jLabel15.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.red));
        }
        else
        {
            pm1.jLabel15.setForeground(java.awt.Color.green);
            pm1.jLabel15.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.green));
        }
        if(apron_domestic[15]!=0)
        {
            pm1.jLabel16.setForeground(java.awt.Color.red);
            pm1.jLabel16.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.red));
        }
        else
        {
            pm1.jLabel16.setForeground(java.awt.Color.green);
            pm1.jLabel16.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.green));
        }
        if(apron_domestic[16]!=0)
        {
            pm1.jLabel17.setForeground(java.awt.Color.red);
            pm1.jLabel17.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.red));
        }
        else
        {
            pm1.jLabel17.setForeground(java.awt.Color.green);
            pm1.jLabel17.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.green));
        }
        if(apron_domestic[17]!=0)
        {
            pm1.jLabel18.setForeground(java.awt.Color.red);
            pm1.jLabel18.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.red));
        }
        else
        {
            pm1.jLabel18.setForeground(java.awt.Color.green);
            pm1.jLabel18.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.green));
        }
        if(apron_domestic[18]!=0)
        {
            pm1.jLabel19.setForeground(java.awt.Color.red);
            pm1.jLabel19.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.red));
        }
        else
        {
            pm1.jLabel19.setForeground(java.awt.Color.green);
            pm1.jLabel19.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.green));
        }
        if(apron_domestic[19]!=0)
        {
            pm1.jLabel20.setForeground(java.awt.Color.red);
            pm1.jLabel20.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.red));
        }
        else
        {
            pm1.jLabel20.setForeground(java.awt.Color.green);
            pm1.jLabel20.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.green));
        }
        
        if(apron_domestic[20]!=0)
        {
            pm1.jLabel21.setForeground(java.awt.Color.red);
            pm1.jLabel21.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.red));
        }
        else
        {
            pm1.jLabel21.setForeground(java.awt.Color.green);
            pm1.jLabel21.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.green));
        }
        if(apron_domestic[21]!=0)
        {
            pm1.jLabel22.setForeground(java.awt.Color.red);
            pm1.jLabel22.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.red));
        }
        else
        {
            pm1.jLabel22.setForeground(java.awt.Color.green);
            pm1.jLabel22.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.green));
        }
        if(apron_domestic[22]!=0)
        {
            pm1.jLabel23.setForeground(java.awt.Color.red);
            pm1.jLabel23.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.red));
        }
        else
        {
            pm1.jLabel23.setForeground(java.awt.Color.green);
            pm1.jLabel23.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.green));
        }
        if(apron_domestic[23]!=0)
        {
            pm1.jLabel24.setForeground(java.awt.Color.red);
            pm1.jLabel24.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.red));
        }
        else
        {
            pm1.jLabel24.setForeground(java.awt.Color.green);
            pm1.jLabel24.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.green));
        }
        if(apron_domestic[24]!=0)
        {
            pm1.jLabel25.setForeground(java.awt.Color.red);
            pm1.jLabel25.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.red));
        }
        else
        {
            pm1.jLabel25.setForeground(java.awt.Color.green);
            pm1.jLabel25.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.green));
        }
        if(apron_domestic[25]!=0)
        {
            pm1.jLabel26.setForeground(java.awt.Color.red);
            pm1.jLabel26.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.red));
        }
        else
        {
            pm1.jLabel26.setForeground(java.awt.Color.green);
            pm1.jLabel26.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.green));
        }
        if(apron_domestic[26]!=0)
        {
            pm1.jLabel27.setForeground(java.awt.Color.red);
            pm1.jLabel27.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.red));
        }
        else
        {
            pm1.jLabel27.setForeground(java.awt.Color.green);
            pm1.jLabel27.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.green));
        }
        if(apron_domestic[27]!=0)
        {
            pm1.jLabel28.setForeground(java.awt.Color.red);
            pm1.jLabel28.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.red));
        }
        else
        {
            pm1.jLabel28.setForeground(java.awt.Color.green);
            pm1.jLabel28.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.green));
        }
        if(apron_domestic[28]!=0)
        {
            pm1.jLabel29.setForeground(java.awt.Color.red);
            pm1.jLabel29.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.red));
        }
        else
        {
            pm1.jLabel29.setForeground(java.awt.Color.green);
            pm1.jLabel29.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.green));
        }
        if(apron_domestic[29]!=0)
        {
            pm1.jLabel30.setForeground(java.awt.Color.red);
            pm1.jLabel30.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.red));
        }
        else
        {
            pm1.jLabel30.setForeground(java.awt.Color.green);
            pm1.jLabel30.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.green));
        }
        if(apron_domestic[30]!=0)
        {
            pm1.jLabel31.setForeground(java.awt.Color.red);
            pm1.jLabel31.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.red));
        }
        else
        {
            pm1.jLabel31.setForeground(java.awt.Color.green);
            pm1.jLabel31.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.green));
        }
        if(apron_domestic[31]!=0)
        {
            pm1.jLabel32.setForeground(java.awt.Color.red);
            pm1.jLabel32.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.red));
        }
        else
        {
            pm1.jLabel32.setForeground(java.awt.Color.green);
            pm1.jLabel32.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.green));
        }
        if(apron_domestic[32]!=0)
        {
            pm1.jLabel33.setForeground(java.awt.Color.red);
            pm1.jLabel33.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.red));
        }
        else
        {
            pm1.jLabel33.setForeground(java.awt.Color.green);
            pm1.jLabel33.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.green));
        }
        if(apron_domestic[33]!=0)
        {
            pm1.jLabel34.setForeground(java.awt.Color.red);
            pm1.jLabel34.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.red));
        }
        else
        {
            pm1.jLabel34.setForeground(java.awt.Color.green);
            pm1.jLabel34.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.green));
        }
        if(apron_domestic[34]!=0)
        {
            pm1.jLabel35.setForeground(java.awt.Color.red);
            pm1.jLabel35.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.red));
        }
        else
        {
            pm1.jLabel35.setForeground(java.awt.Color.green);
            pm1.jLabel35.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.green));
        }
        if(apron_domestic[35]!=0)
        {
            pm1.jLabel36.setForeground(java.awt.Color.red);
            pm1.jLabel36.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.red));
        }
        else
        {
            pm1.jLabel36.setForeground(java.awt.Color.green);
            pm1.jLabel36.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.green));
        }
        if(apron_domestic[36]!=0)
        {
            pm1.jLabel37.setForeground(java.awt.Color.red);
            pm1.jLabel37.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.red));
        }
        else
        {
            pm1.jLabel37.setForeground(java.awt.Color.green);
            pm1.jLabel37.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.green));
        }
        if(apron_domestic[37]!=0)
        {
            pm1.jLabel38.setForeground(java.awt.Color.red);
            pm1.jLabel38.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.red));
        }
        else
        {
            pm1.jLabel38.setForeground(java.awt.Color.green);
            pm1.jLabel38.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.green));
        }
        if(apron_domestic[38]!=0)
        {
            pm1.jLabel39.setForeground(java.awt.Color.red);
            pm1.jLabel39.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.red));
        }
        else
        {
            pm1.jLabel39.setForeground(java.awt.Color.green);
            pm1.jLabel39.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.green));
        }
        if(apron_domestic[39]!=0)
        {
            pm1.jLabel40.setForeground(java.awt.Color.red);
            pm1.jLabel40.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.red));
        }
        else
        {
            pm1.jLabel40.setForeground(java.awt.Color.green);
            pm1.jLabel40.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.green));
        }
        
        pm1.jLabel1.setText(" "+String.valueOf(apron_domestic[0])+" ");
        pm1.jLabel2.setText(" "+String.valueOf(apron_domestic[1])+" ");
        pm1.jLabel3.setText(" "+String.valueOf(apron_domestic[2])+" ");
        pm1.jLabel4.setText(" "+String.valueOf(apron_domestic[3])+" ");
        pm1.jLabel5.setText(" "+String.valueOf(apron_domestic[4])+" ");
        pm1.jLabel6.setText(" "+String.valueOf(apron_domestic[5])+" ");
        pm1.jLabel7.setText(" "+String.valueOf(apron_domestic[6])+" ");
        pm1.jLabel8.setText(" "+String.valueOf(apron_domestic[7])+" ");
        pm1.jLabel9.setText(" "+String.valueOf(apron_domestic[8])+" ");
        pm1.jLabel10.setText(" "+String.valueOf(apron_domestic[9])+" ");
        pm1.jLabel11.setText(" "+String.valueOf(apron_domestic[10])+" ");
        pm1.jLabel12.setText(" "+String.valueOf(apron_domestic[11])+" ");
        pm1.jLabel13.setText(" "+String.valueOf(apron_domestic[12])+" ");
        pm1.jLabel14.setText(" "+String.valueOf(apron_domestic[13])+" ");
        pm1.jLabel15.setText(" "+String.valueOf(apron_domestic[14])+" ");
        pm1.jLabel16.setText(" "+String.valueOf(apron_domestic[15])+" ");
        pm1.jLabel17.setText(" "+String.valueOf(apron_domestic[16])+" ");
        pm1.jLabel18.setText(" "+String.valueOf(apron_domestic[17])+" ");
        pm1.jLabel19.setText(" "+String.valueOf(apron_domestic[18])+" ");
        pm1.jLabel20.setText(" "+String.valueOf(apron_domestic[19])+" ");
        pm1.jLabel21.setText(" "+String.valueOf(apron_domestic[20])+" ");
        pm1.jLabel22.setText(" "+String.valueOf(apron_domestic[21])+" ");
        pm1.jLabel23.setText(" "+String.valueOf(apron_domestic[22])+" ");
        pm1.jLabel24.setText(" "+String.valueOf(apron_domestic[23])+" ");
        pm1.jLabel25.setText(" "+String.valueOf(apron_domestic[24])+" ");
        pm1.jLabel26.setText(" "+String.valueOf(apron_domestic[25])+" ");
        pm1.jLabel27.setText(" "+String.valueOf(apron_domestic[26])+" ");
        pm1.jLabel28.setText(" "+String.valueOf(apron_domestic[27])+" ");
        pm1.jLabel29.setText(" "+String.valueOf(apron_domestic[28])+" ");
        pm1.jLabel30.setText(" "+String.valueOf(apron_domestic[29])+" ");
        pm1.jLabel31.setText(" "+String.valueOf(apron_domestic[30])+" ");
        pm1.jLabel32.setText(" "+String.valueOf(apron_domestic[31])+" ");
        pm1.jLabel33.setText(" "+String.valueOf(apron_domestic[32])+" ");
        pm1.jLabel34.setText(" "+String.valueOf(apron_domestic[33])+" ");
        pm1.jLabel35.setText(" "+String.valueOf(apron_domestic[34])+" ");
        pm1.jLabel36.setText(" "+String.valueOf(apron_domestic[35])+" ");
        pm1.jLabel37.setText(" "+String.valueOf(apron_domestic[36])+" ");
        pm1.jLabel38.setText(" "+String.valueOf(apron_domestic[37])+" ");
        pm1.jLabel39.setText(" "+String.valueOf(apron_domestic[38])+" ");
        pm1.jLabel40.setText(" "+String.valueOf(apron_domestic[39])+" ");
        
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        
        pm2.setVisible(true);
        
        if(apron_international[0]!=0)
        {
            pm2.jLabel1.setForeground(java.awt.Color.red);
            pm2.jLabel1.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.red));
        }
        else
        {
            pm2.jLabel1.setForeground(java.awt.Color.green);
            pm2.jLabel1.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.green));
        }
        if(apron_international[1]!=0)
        {
            pm2.jLabel2.setForeground(java.awt.Color.red);
            pm2.jLabel2.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.red));
        }
        else
        {
            pm2.jLabel2.setForeground(java.awt.Color.green);
            pm2.jLabel2.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.green));
        }
        if(apron_international[2]!=0)
        {
            pm2.jLabel3.setForeground(java.awt.Color.red);
            pm2.jLabel3.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.red));
        }
        else
        {
            pm2.jLabel3.setForeground(java.awt.Color.green);
            pm2.jLabel3.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.green));
        }
        if(apron_international[3]!=0)
        {
            pm2.jLabel4.setForeground(java.awt.Color.red);
            pm2.jLabel4.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.red));
        }
        else
        {
            pm2.jLabel4.setForeground(java.awt.Color.green);
            pm2.jLabel4.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.green));
        }
        if(apron_international[4]!=0)
        {
            pm2.jLabel5.setForeground(java.awt.Color.red);
            pm2.jLabel5.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.red));
        }
        else
        {
            pm2.jLabel5.setForeground(java.awt.Color.green);
            pm2.jLabel5.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.green));
        }
        if(apron_international[5]!=0)
        {
            pm2.jLabel6.setForeground(java.awt.Color.red);
            pm2.jLabel6.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.red));
        }
        else
        {
            pm2.jLabel6.setForeground(java.awt.Color.green);
            pm2.jLabel6.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.green));
        }
        if(apron_international[6]!=0)
        {
            pm2.jLabel7.setForeground(java.awt.Color.red);
            pm2.jLabel7.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.red));
        }
        else
        {
            pm2.jLabel7.setForeground(java.awt.Color.green);
            pm2.jLabel7.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.green));
        }
        if(apron_international[7]!=0)
        {
            pm2.jLabel8.setForeground(java.awt.Color.red);
            pm2.jLabel8.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.red));
        }
        else
        {
            pm2.jLabel8.setForeground(java.awt.Color.green);
            pm2.jLabel8.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.green));
        }
        if(apron_international[8]!=0)
        {
            pm2.jLabel9.setForeground(java.awt.Color.red);
            pm2.jLabel9.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.red));
        }
        else
        {
            pm2.jLabel9.setForeground(java.awt.Color.green);
            pm2.jLabel9.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.green));
        }
        if(apron_international[9]!=0)
        {
            pm2.jLabel10.setForeground(java.awt.Color.red);
            pm2.jLabel10.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.red));
        }
        else
        {
            pm2.jLabel10.setForeground(java.awt.Color.green);
            pm2.jLabel10.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.green));
        }
        if(apron_international[10]!=0)
        {
            pm2.jLabel11.setForeground(java.awt.Color.red);
            pm2.jLabel11.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.red));
        }
        else
        {
            pm2.jLabel11.setForeground(java.awt.Color.green);
            pm2.jLabel11.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.green));
        }
        if(apron_international[11]!=0)
        {
            pm2.jLabel12.setForeground(java.awt.Color.red);
            pm2.jLabel12.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.red));
        }
        else
        {
            pm2.jLabel12.setForeground(java.awt.Color.green);
            pm2.jLabel12.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.green));
        }
        if(apron_international[12]!=0)
        {
            pm2.jLabel13.setForeground(java.awt.Color.red);
            pm2.jLabel13.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.red));
        }
        else
        {
            pm2.jLabel13.setForeground(java.awt.Color.green);
            pm2.jLabel13.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.green));
        }
        if(apron_international[13]!=0)
        {
            pm2.jLabel14.setForeground(java.awt.Color.red);
            pm2.jLabel14.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.red));
        }
        else
        {
            pm2.jLabel14.setForeground(java.awt.Color.green);
            pm2.jLabel14.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.green));
        }
        if(apron_international[14]!=0)
        {
            pm2.jLabel15.setForeground(java.awt.Color.red);
            pm2.jLabel15.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.red));
        }
        else
        {
            pm2.jLabel15.setForeground(java.awt.Color.green);
            pm2.jLabel15.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.green));
        }
        if(apron_international[15]!=0)
        {
            pm2.jLabel16.setForeground(java.awt.Color.red);
            pm2.jLabel16.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.red));
        }
        else
        {
            pm2.jLabel16.setForeground(java.awt.Color.green);
            pm2.jLabel16.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.green));
        }
        if(apron_international[16]!=0)
        {
            pm2.jLabel17.setForeground(java.awt.Color.red);
            pm2.jLabel17.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.red));
        }
        else
        {
            pm2.jLabel17.setForeground(java.awt.Color.green);
            pm2.jLabel17.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.green));
        }
        if(apron_international[17]!=0)
        {
            pm2.jLabel18.setForeground(java.awt.Color.red);
            pm2.jLabel18.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.red));
        }
        else
        {
            pm2.jLabel18.setForeground(java.awt.Color.green);
            pm2.jLabel18.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.green));
        }
        if(apron_international[18]!=0)
        {
            pm2.jLabel19.setForeground(java.awt.Color.red);
            pm2.jLabel19.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.red));
        }
        else
        {
            pm2.jLabel19.setForeground(java.awt.Color.green);
            pm2.jLabel19.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.green));
        }
        if(apron_international[19]!=0)
        {
            pm2.jLabel20.setForeground(java.awt.Color.red);
            pm2.jLabel20.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.red));
        }
        else
        {
            pm2.jLabel20.setForeground(java.awt.Color.green);
            pm2.jLabel20.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.green));
        }
        
        if(apron_international[20]!=0)
        {
            pm2.jLabel21.setForeground(java.awt.Color.red);
            pm2.jLabel21.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.red));
        }
        else
        {
            pm2.jLabel21.setForeground(java.awt.Color.green);
            pm2.jLabel21.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.green));
        }
        if(apron_international[21]!=0)
        {
            pm2.jLabel22.setForeground(java.awt.Color.red);
            pm2.jLabel22.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.red));
        }
        else
        {
            pm2.jLabel22.setForeground(java.awt.Color.green);
            pm2.jLabel22.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.green));
        }
        if(apron_international[22]!=0)
        {
            pm2.jLabel23.setForeground(java.awt.Color.red);
            pm2.jLabel23.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.red));
        }
        else
        {
            pm2.jLabel23.setForeground(java.awt.Color.green);
            pm2.jLabel23.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.green));
        }
        if(apron_international[23]!=0)
        {
            pm2.jLabel24.setForeground(java.awt.Color.red);
            pm2.jLabel24.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.red));
        }
        else
        {
            pm2.jLabel24.setForeground(java.awt.Color.green);
            pm2.jLabel24.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.green));
        }
        if(apron_international[24]!=0)
        {
            pm2.jLabel25.setForeground(java.awt.Color.red);
            pm2.jLabel25.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.red));
        }
        else
        {
            pm2.jLabel25.setForeground(java.awt.Color.green);
            pm2.jLabel25.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.green));
        }
        if(apron_international[25]!=0)
        {
            pm2.jLabel26.setForeground(java.awt.Color.red);
            pm2.jLabel26.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.red));
        }
        else
        {
            pm2.jLabel26.setForeground(java.awt.Color.green);
            pm2.jLabel26.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.green));
        }
        if(apron_international[26]!=0)
        {
            pm2.jLabel27.setForeground(java.awt.Color.red);
            pm2.jLabel27.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.red));
        }
        else
        {
            pm2.jLabel27.setForeground(java.awt.Color.green);
            pm2.jLabel27.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.green));
        }
        if(apron_international[27]!=0)
        {
            pm2.jLabel28.setForeground(java.awt.Color.red);
            pm2.jLabel28.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.red));
        }
        else
        {
            pm2.jLabel28.setForeground(java.awt.Color.green);
            pm2.jLabel28.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.green));
        }
        if(apron_international[28]!=0)
        {
            pm2.jLabel29.setForeground(java.awt.Color.red);
            pm2.jLabel29.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.red));
        }
        else
        {
            pm2.jLabel29.setForeground(java.awt.Color.green);
            pm2.jLabel29.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.green));
        }
        if(apron_international[29]!=0)
        {
            pm2.jLabel30.setForeground(java.awt.Color.red);
            pm2.jLabel30.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.red));
        }
        else
        {
            pm2.jLabel30.setForeground(java.awt.Color.green);
            pm2.jLabel30.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.green));
        }
        if(apron_international[30]!=0)
        {
            pm2.jLabel31.setForeground(java.awt.Color.red);
            pm2.jLabel31.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.red));
        }
        else
        {
            pm2.jLabel31.setForeground(java.awt.Color.green);
            pm2.jLabel31.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.green));
        }
        if(apron_international[31]!=0)
        {
            pm2.jLabel32.setForeground(java.awt.Color.red);
            pm2.jLabel32.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.red));
        }
        else
        {
            pm2.jLabel32.setForeground(java.awt.Color.green);
            pm2.jLabel32.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.green));
        }
        if(apron_international[32]!=0)
        {
            pm2.jLabel33.setForeground(java.awt.Color.red);
            pm2.jLabel33.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.red));
        }
        else
        {
            pm2.jLabel33.setForeground(java.awt.Color.green);
            pm2.jLabel33.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.green));
        }
        if(apron_international[33]!=0)
        {
            pm2.jLabel34.setForeground(java.awt.Color.red);
            pm2.jLabel34.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.red));
        }
        else
        {
            pm2.jLabel34.setForeground(java.awt.Color.green);
            pm2.jLabel34.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.green));
        }
        if(apron_international[34]!=0)
        {
            pm2.jLabel35.setForeground(java.awt.Color.red);
            pm2.jLabel35.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.red));
        }
        else
        {
            pm2.jLabel35.setForeground(java.awt.Color.green);
            pm2.jLabel35.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.green));
        }
        if(apron_international[35]!=0)
        {
            pm2.jLabel36.setForeground(java.awt.Color.red);
            pm2.jLabel36.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.red));
        }
        else
        {
            pm2.jLabel36.setForeground(java.awt.Color.green);
            pm2.jLabel36.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.green));
        }
        if(apron_international[36]!=0)
        {
            pm2.jLabel37.setForeground(java.awt.Color.red);
            pm2.jLabel37.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.red));
        }
        else
        {
            pm2.jLabel37.setForeground(java.awt.Color.green);
            pm2.jLabel37.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.green));
        }
        if(apron_international[37]!=0)
        {
            pm2.jLabel38.setForeground(java.awt.Color.red);
            pm2.jLabel38.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.red));
        }
        else
        {
            pm2.jLabel38.setForeground(java.awt.Color.green);
            pm2.jLabel38.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.green));
        }
        if(apron_international[38]!=0)
        {
            pm2.jLabel39.setForeground(java.awt.Color.red);
            pm2.jLabel39.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.red));
        }
        else
        {
            pm2.jLabel39.setForeground(java.awt.Color.green);
            pm2.jLabel39.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.green));
        }
        if(apron_international[39]!=0)
        {
            pm2.jLabel40.setForeground(java.awt.Color.red);
            pm2.jLabel40.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.red));
        }
        else
        {
            pm2.jLabel40.setForeground(java.awt.Color.green);
            pm2.jLabel40.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.green));
        }
        
        pm2.jLabel1.setText(" "+String.valueOf(apron_international[0])+" ");
        pm2.jLabel2.setText(" "+String.valueOf(apron_international[1])+" ");
        pm2.jLabel3.setText(" "+String.valueOf(apron_international[2])+" ");
        pm2.jLabel4.setText(" "+String.valueOf(apron_international[3])+" ");
        pm2.jLabel5.setText(" "+String.valueOf(apron_international[4])+" ");
        pm2.jLabel6.setText(" "+String.valueOf(apron_international[5])+" ");
        pm2.jLabel7.setText(" "+String.valueOf(apron_international[6])+" ");
        pm2.jLabel8.setText(" "+String.valueOf(apron_international[7])+" ");
        pm2.jLabel9.setText(" "+String.valueOf(apron_international[8])+" ");
        pm2.jLabel10.setText(" "+String.valueOf(apron_international[9])+" ");
        pm2.jLabel11.setText(" "+String.valueOf(apron_international[10])+" ");
        pm2.jLabel12.setText(" "+String.valueOf(apron_international[11])+" ");
        pm2.jLabel13.setText(" "+String.valueOf(apron_international[12])+" ");
        pm2.jLabel14.setText(" "+String.valueOf(apron_international[13])+" ");
        pm2.jLabel15.setText(" "+String.valueOf(apron_international[14])+" ");
        pm2.jLabel16.setText(" "+String.valueOf(apron_international[15])+" ");
        pm2.jLabel17.setText(" "+String.valueOf(apron_international[16])+" ");
        pm2.jLabel18.setText(" "+String.valueOf(apron_international[17])+" ");
        pm2.jLabel19.setText(" "+String.valueOf(apron_international[18])+" ");
        pm2.jLabel20.setText(" "+String.valueOf(apron_international[19])+" ");
        pm2.jLabel21.setText(" "+String.valueOf(apron_international[20])+" ");
        pm2.jLabel22.setText(" "+String.valueOf(apron_international[21])+" ");
        pm2.jLabel23.setText(" "+String.valueOf(apron_international[22])+" ");
        pm2.jLabel24.setText(" "+String.valueOf(apron_international[23])+" ");
        pm2.jLabel25.setText(" "+String.valueOf(apron_international[24])+" ");
        pm2.jLabel26.setText(" "+String.valueOf(apron_international[25])+" ");
        pm2.jLabel27.setText(" "+String.valueOf(apron_international[26])+" ");
        pm2.jLabel28.setText(" "+String.valueOf(apron_international[27])+" ");
        pm2.jLabel29.setText(" "+String.valueOf(apron_international[28])+" ");
        pm2.jLabel30.setText(" "+String.valueOf(apron_international[29])+" ");
        pm2.jLabel31.setText(" "+String.valueOf(apron_international[30])+" ");
        pm2.jLabel32.setText(" "+String.valueOf(apron_international[31])+" ");
        pm2.jLabel33.setText(" "+String.valueOf(apron_international[32])+" ");
        pm2.jLabel34.setText(" "+String.valueOf(apron_international[33])+" ");
        pm2.jLabel35.setText(" "+String.valueOf(apron_international[34])+" ");
        pm2.jLabel36.setText(" "+String.valueOf(apron_international[35])+" ");
        pm2.jLabel37.setText(" "+String.valueOf(apron_international[36])+" ");
        pm2.jLabel38.setText(" "+String.valueOf(apron_international[37])+" ");
        pm2.jLabel39.setText(" "+String.valueOf(apron_international[38])+" ");
        pm2.jLabel40.setText(" "+String.valueOf(apron_international[39])+" ");
        
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
        
        pm3.setVisible(true);
        
        if(apron_cargo[0]!=0)
        {
            pm3.jLabel1.setForeground(java.awt.Color.red);
            pm3.jLabel1.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.red));
        }
        else
        {
            pm3.jLabel1.setForeground(java.awt.Color.green);
            pm3.jLabel1.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.green));
        }
        if(apron_cargo[1]!=0)
        {
            pm3.jLabel2.setForeground(java.awt.Color.red);
            pm3.jLabel2.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.red));
        }
        else
        {
            pm3.jLabel2.setForeground(java.awt.Color.green);
            pm3.jLabel2.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.green));
        }
        if(apron_cargo[2]!=0)
        {
            pm3.jLabel3.setForeground(java.awt.Color.red);
            pm3.jLabel3.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.red));
        }
        else
        {
            pm3.jLabel3.setForeground(java.awt.Color.green);
            pm3.jLabel3.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.green));
        }
        if(apron_cargo[3]!=0)
        {
            pm3.jLabel4.setForeground(java.awt.Color.red);
            pm3.jLabel4.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.red));
        }
        else
        {
            pm3.jLabel4.setForeground(java.awt.Color.green);
            pm3.jLabel4.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.green));
        }
        if(apron_cargo[4]!=0)
        {
            pm3.jLabel5.setForeground(java.awt.Color.red);
            pm3.jLabel5.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.red));
        }
        else
        {
            pm3.jLabel5.setForeground(java.awt.Color.green);
            pm3.jLabel5.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.green));
        }
        if(apron_cargo[5]!=0)
        {
            pm3.jLabel6.setForeground(java.awt.Color.red);
            pm3.jLabel6.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.red));
        }
        else
        {
            pm3.jLabel6.setForeground(java.awt.Color.green);
            pm3.jLabel6.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.green));
        }
        if(apron_cargo[6]!=0)
        {
            pm3.jLabel7.setForeground(java.awt.Color.red);
            pm3.jLabel7.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.red));
        }
        else
        {
            pm3.jLabel7.setForeground(java.awt.Color.green);
            pm3.jLabel7.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.green));
        }
        if(apron_cargo[7]!=0)
        {
            pm3.jLabel8.setForeground(java.awt.Color.red);
            pm3.jLabel8.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.red));
        }
        else
        {
            pm3.jLabel8.setForeground(java.awt.Color.green);
            pm3.jLabel8.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.green));
        }
        if(apron_cargo[8]!=0)
        {
            pm3.jLabel9.setForeground(java.awt.Color.red);
            pm3.jLabel9.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.red));
        }
        else
        {
            pm3.jLabel9.setForeground(java.awt.Color.green);
            pm3.jLabel9.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.green));
        }
        if(apron_cargo[9]!=0)
        {
            pm3.jLabel10.setForeground(java.awt.Color.red);
            pm3.jLabel10.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.red));
        }
        else
        {
            pm3.jLabel10.setForeground(java.awt.Color.green);
            pm3.jLabel10.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.green));
        }
        if(apron_cargo[10]!=0)
        {
            pm3.jLabel11.setForeground(java.awt.Color.red);
            pm3.jLabel11.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.red));
        }
        else
        {
            pm3.jLabel11.setForeground(java.awt.Color.green);
            pm3.jLabel11.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.green));
        }
        if(apron_cargo[11]!=0)
        {
            pm3.jLabel12.setForeground(java.awt.Color.red);
            pm3.jLabel12.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.red));
        }
        else
        {
            pm3.jLabel12.setForeground(java.awt.Color.green);
            pm3.jLabel12.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.green));
        }
        if(apron_cargo[12]!=0)
        {
            pm3.jLabel13.setForeground(java.awt.Color.red);
            pm3.jLabel13.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.red));
        }
        else
        {
            pm3.jLabel13.setForeground(java.awt.Color.green);
            pm3.jLabel13.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.green));
        }
        if(apron_cargo[13]!=0)
        {
            pm3.jLabel14.setForeground(java.awt.Color.red);
            pm3.jLabel14.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.red));
        }
        else
        {
            pm3.jLabel14.setForeground(java.awt.Color.green);
            pm3.jLabel14.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.green));
        }
        if(apron_cargo[14]!=0)
        {
            pm3.jLabel15.setForeground(java.awt.Color.red);
            pm3.jLabel15.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.red));
        }
        else
        {
            pm3.jLabel15.setForeground(java.awt.Color.green);
            pm3.jLabel15.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.green));
        }
        if(apron_cargo[15]!=0)
        {
            pm3.jLabel16.setForeground(java.awt.Color.red);
            pm3.jLabel16.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.red));
        }
        else
        {
            pm3.jLabel16.setForeground(java.awt.Color.green);
            pm3.jLabel16.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.green));
        }
        if(apron_cargo[16]!=0)
        {
            pm3.jLabel17.setForeground(java.awt.Color.red);
            pm3.jLabel17.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.red));
        }
        else
        {
            pm3.jLabel17.setForeground(java.awt.Color.green);
            pm3.jLabel17.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.green));
        }
        if(apron_cargo[17]!=0)
        {
            pm3.jLabel18.setForeground(java.awt.Color.red);
            pm3.jLabel18.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.red));
        }
        else
        {
            pm3.jLabel18.setForeground(java.awt.Color.green);
            pm3.jLabel18.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.green));
        }
        if(apron_cargo[18]!=0)
        {
            pm3.jLabel19.setForeground(java.awt.Color.red);
            pm3.jLabel19.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.red));
        }
        else
        {
            pm3.jLabel19.setForeground(java.awt.Color.green);
            pm3.jLabel19.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.green));
        }
        if(apron_cargo[19]!=0)
        {
            pm3.jLabel20.setForeground(java.awt.Color.red);
            pm3.jLabel20.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.red));
        }
        else
        {
            pm3.jLabel20.setForeground(java.awt.Color.green);
            pm3.jLabel20.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.green));
        }
        
        if(apron_cargo[20]!=0)
        {
            pm3.jLabel21.setForeground(java.awt.Color.red);
            pm3.jLabel21.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.red));
        }
        else
        {
            pm3.jLabel21.setForeground(java.awt.Color.green);
            pm3.jLabel21.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.green));
        }
        if(apron_cargo[21]!=0)
        {
            pm3.jLabel22.setForeground(java.awt.Color.red);
            pm3.jLabel22.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.red));
        }
        else
        {
            pm3.jLabel22.setForeground(java.awt.Color.green);
            pm3.jLabel22.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.green));
        }
        if(apron_cargo[22]!=0)
        {
            pm3.jLabel23.setForeground(java.awt.Color.red);
            pm3.jLabel23.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.red));
        }
        else
        {
            pm3.jLabel23.setForeground(java.awt.Color.green);
            pm3.jLabel23.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.green));
        }
        if(apron_cargo[23]!=0)
        {
            pm3.jLabel24.setForeground(java.awt.Color.red);
            pm3.jLabel24.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.red));
        }
        else
        {
            pm3.jLabel24.setForeground(java.awt.Color.green);
            pm3.jLabel24.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.green));
        }
        if(apron_cargo[24]!=0)
        {
            pm3.jLabel25.setForeground(java.awt.Color.red);
            pm3.jLabel25.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.red));
        }
        else
        {
            pm3.jLabel25.setForeground(java.awt.Color.green);
            pm3.jLabel25.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.green));
        }
        if(apron_cargo[25]!=0)
        {
            pm3.jLabel26.setForeground(java.awt.Color.red);
            pm3.jLabel26.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.red));
        }
        else
        {
            pm3.jLabel26.setForeground(java.awt.Color.green);
            pm3.jLabel26.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.green));
        }
        if(apron_cargo[26]!=0)
        {
            pm3.jLabel27.setForeground(java.awt.Color.red);
            pm3.jLabel27.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.red));
        }
        else
        {
            pm3.jLabel27.setForeground(java.awt.Color.green);
            pm3.jLabel27.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.green));
        }
        if(apron_cargo[27]!=0)
        {
            pm3.jLabel28.setForeground(java.awt.Color.red);
            pm3.jLabel28.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.red));
        }
        else
        {
            pm3.jLabel28.setForeground(java.awt.Color.green);
            pm3.jLabel28.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.green));
        }
        if(apron_cargo[28]!=0)
        {
            pm3.jLabel29.setForeground(java.awt.Color.red);
            pm3.jLabel29.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.red));
        }
        else
        {
            pm3.jLabel29.setForeground(java.awt.Color.green);
            pm3.jLabel29.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.green));
        }
        if(apron_cargo[29]!=0)
        {
            pm3.jLabel30.setForeground(java.awt.Color.red);
            pm3.jLabel30.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.red));
        }
        else
        {
            pm3.jLabel30.setForeground(java.awt.Color.green);
            pm3.jLabel30.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.green));
        }
        if(apron_cargo[30]!=0)
        {
            pm3.jLabel31.setForeground(java.awt.Color.red);
            pm3.jLabel31.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.red));
        }
        else
        {
            pm3.jLabel31.setForeground(java.awt.Color.green);
            pm3.jLabel31.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.green));
        }
        if(apron_cargo[31]!=0)
        {
            pm3.jLabel32.setForeground(java.awt.Color.red);
            pm3.jLabel32.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.red));
        }
        else
        {
            pm3.jLabel32.setForeground(java.awt.Color.green);
            pm3.jLabel32.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.green));
        }
        if(apron_cargo[32]!=0)
        {
            pm3.jLabel33.setForeground(java.awt.Color.red);
            pm3.jLabel33.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.red));
        }
        else
        {
            pm3.jLabel33.setForeground(java.awt.Color.green);
            pm3.jLabel33.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.green));
        }
        if(apron_cargo[33]!=0)
        {
            pm3.jLabel34.setForeground(java.awt.Color.red);
            pm3.jLabel34.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.red));
        }
        else
        {
            pm3.jLabel34.setForeground(java.awt.Color.green);
            pm3.jLabel34.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.green));
        }
        if(apron_cargo[34]!=0)
        {
            pm3.jLabel35.setForeground(java.awt.Color.red);
            pm3.jLabel35.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.red));
        }
        else
        {
            pm3.jLabel35.setForeground(java.awt.Color.green);
            pm3.jLabel35.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.green));
        }
        if(apron_cargo[35]!=0)
        {
            pm3.jLabel36.setForeground(java.awt.Color.red);
            pm3.jLabel36.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.red));
        }
        else
        {
            pm3.jLabel36.setForeground(java.awt.Color.green);
            pm3.jLabel36.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.green));
        }
        if(apron_cargo[36]!=0)
        {
            pm3.jLabel37.setForeground(java.awt.Color.red);
            pm3.jLabel37.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.red));
        }
        else
        {
            pm3.jLabel37.setForeground(java.awt.Color.green);
            pm3.jLabel37.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.green));
        }
        if(apron_cargo[37]!=0)
        {
            pm3.jLabel38.setForeground(java.awt.Color.red);
            pm3.jLabel38.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.red));
        }
        else
        {
            pm3.jLabel38.setForeground(java.awt.Color.green);
            pm3.jLabel38.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.green));
        }
        if(apron_cargo[38]!=0)
        {
            pm3.jLabel39.setForeground(java.awt.Color.red);
            pm3.jLabel39.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.red));
        }
        else
        {
            pm3.jLabel39.setForeground(java.awt.Color.green);
            pm3.jLabel39.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.green));
        }
        if(apron_cargo[39]!=0)
        {
            pm3.jLabel40.setForeground(java.awt.Color.red);
            pm3.jLabel40.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.red));
        }
        else
        {
            pm3.jLabel40.setForeground(java.awt.Color.green);
            pm3.jLabel40.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.green));
        }
        
        pm3.jLabel1.setText(" "+String.valueOf(apron_cargo[0])+" ");
        pm3.jLabel2.setText(" "+String.valueOf(apron_cargo[1])+" ");
        pm3.jLabel3.setText(" "+String.valueOf(apron_cargo[2])+" ");
        pm3.jLabel4.setText(" "+String.valueOf(apron_cargo[3])+" ");
        pm3.jLabel5.setText(" "+String.valueOf(apron_cargo[4])+" ");
        pm3.jLabel6.setText(" "+String.valueOf(apron_cargo[5])+" ");
        pm3.jLabel7.setText(" "+String.valueOf(apron_cargo[6])+" ");
        pm3.jLabel8.setText(" "+String.valueOf(apron_cargo[7])+" ");
        pm3.jLabel9.setText(" "+String.valueOf(apron_cargo[8])+" ");
        pm3.jLabel10.setText(" "+String.valueOf(apron_cargo[9])+" ");
        pm3.jLabel11.setText(" "+String.valueOf(apron_cargo[10])+" ");
        pm3.jLabel12.setText(" "+String.valueOf(apron_cargo[11])+" ");
        pm3.jLabel13.setText(" "+String.valueOf(apron_cargo[12])+" ");
        pm3.jLabel14.setText(" "+String.valueOf(apron_cargo[13])+" ");
        pm3.jLabel15.setText(" "+String.valueOf(apron_cargo[14])+" ");
        pm3.jLabel16.setText(" "+String.valueOf(apron_cargo[15])+" ");
        pm3.jLabel17.setText(" "+String.valueOf(apron_cargo[16])+" ");
        pm3.jLabel18.setText(" "+String.valueOf(apron_cargo[17])+" ");
        pm3.jLabel19.setText(" "+String.valueOf(apron_cargo[18])+" ");
        pm3.jLabel20.setText(" "+String.valueOf(apron_cargo[19])+" ");
        pm3.jLabel21.setText(" "+String.valueOf(apron_cargo[20])+" ");
        pm3.jLabel22.setText(" "+String.valueOf(apron_cargo[21])+" ");
        pm3.jLabel23.setText(" "+String.valueOf(apron_cargo[22])+" ");
        pm3.jLabel24.setText(" "+String.valueOf(apron_cargo[23])+" ");
        pm3.jLabel25.setText(" "+String.valueOf(apron_cargo[24])+" ");
        pm3.jLabel26.setText(" "+String.valueOf(apron_cargo[25])+" ");
        pm3.jLabel27.setText(" "+String.valueOf(apron_cargo[26])+" ");
        pm3.jLabel28.setText(" "+String.valueOf(apron_cargo[27])+" ");
        pm3.jLabel29.setText(" "+String.valueOf(apron_cargo[28])+" ");
        pm3.jLabel30.setText(" "+String.valueOf(apron_cargo[29])+" ");
        pm3.jLabel31.setText(" "+String.valueOf(apron_cargo[30])+" ");
        pm3.jLabel32.setText(" "+String.valueOf(apron_cargo[31])+" ");
        pm3.jLabel33.setText(" "+String.valueOf(apron_cargo[32])+" ");
        pm3.jLabel34.setText(" "+String.valueOf(apron_cargo[33])+" ");
        pm3.jLabel35.setText(" "+String.valueOf(apron_cargo[34])+" ");
        pm3.jLabel36.setText(" "+String.valueOf(apron_cargo[35])+" ");
        pm3.jLabel37.setText(" "+String.valueOf(apron_cargo[36])+" ");
        pm3.jLabel38.setText(" "+String.valueOf(apron_cargo[37])+" ");
        pm3.jLabel39.setText(" "+String.valueOf(apron_cargo[38])+" ");
        pm3.jLabel40.setText(" "+String.valueOf(apron_cargo[39])+" ");
        
    }//GEN-LAST:event_jButton5ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(remove.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(remove.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(remove.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(remove.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new remove().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables
}
