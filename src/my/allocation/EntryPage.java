/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package my.allocation;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Date;

import java.awt.Color;
import java.io.*;
import java.sql.DriverManager;
import java.sql.Connection;
import java.sql.SQLException;
import java.sql.Statement;
import java.sql.ResultSet;
import javax.swing.JOptionPane;
import static my.allocation.ActivityLog.activity;
import static my.allocation.ActivityLog.acttop;
/**
 *
 * @author Windows-8 (x64)
 */
public class EntryPage extends javax.swing.JFrame {

    /**
     * Creates new form allocationUI
     */
    
    Connection con;
    Statement stmt;
    ResultSet rs;
    
    
    
    public void DoConnect()
    {
        try
        {
            String host="jdbc:derby://localhost:1527/ApronDB";
            String uName="ab";
            String uPass="ab";
            con=DriverManager.getConnection(host,uName,uPass);
            stmt=con.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE, ResultSet.CONCUR_UPDATABLE );
            String sql="select * from planes";
            rs=stmt.executeQuery(sql);
        }
        catch(SQLException ex)
        {
            JOptionPane.showMessageDialog(EntryPage.this, ex.getMessage());
        }
        try
        {
            rs.first();
            do
            {
                jComboBox4.addItem(rs.getString("Name"));
            }
            while (rs.next());
        }
        catch(SQLException ee)
        {
            JOptionPane.showMessageDialog(EntryPage.this, ee.getMessage());
        }
        
        
    }
    
    public EntryPage() {
        initComponents();
        DoConnect();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jLabel1 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jRadioButton2 = new javax.swing.JRadioButton();
        jButton2 = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jTextField1 = new javax.swing.JTextField();
        jButton3 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jRadioButton1 = new javax.swing.JRadioButton();
        jComboBox2 = new javax.swing.JComboBox();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jComboBox4 = new javax.swing.JComboBox();
        jPanel2 = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBounds(new java.awt.Rectangle(0, 0, 0, 0));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setText("Enter Details of Plane");

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Enter details in Here.."));

        jLabel6.setText("Terminal Requirement:");

        jLabel5.setText("Nationality:");

        jLabel2.setText("Serial Number:");

        buttonGroup1.add(jRadioButton2);
        jRadioButton2.setText("No");

        jButton2.setText("Clear data of the day");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton1.setText("Submit");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton3.setText("Go Back");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Tahoma", 2, 10)); // NOI18N
        jLabel3.setText("*(can not be 0)");

        buttonGroup1.add(jRadioButton1);
        jRadioButton1.setText("Yes");

        jComboBox2.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Choose any one.", "Domestic", "International" }));
        jComboBox2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox2ActionPerformed(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("Tahoma", 2, 10)); // NOI18N
        jLabel9.setText("*(Choose No if category is Cargo)");

        jLabel10.setText("Plane Name:");

        jComboBox4.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Choose any one" }));
        jComboBox4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox4ActionPerformed(evt);
            }
        });

        jPanel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));

        jLabel11.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel13)
                    .addComponent(jLabel12)
                    .addComponent(jLabel11))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel11)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 18, Short.MAX_VALUE)
                .addComponent(jLabel12)
                .addGap(18, 18, 18)
                .addComponent(jLabel13)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(8, 8, 8)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 496, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 248, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 236, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel5)
                            .addComponent(jLabel6)
                            .addComponent(jLabel10))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jTextField1)
                            .addComponent(jComboBox2, 0, 136, Short.MAX_VALUE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jRadioButton1)
                                .addGap(35, 35, 35)
                                .addComponent(jRadioButton2))
                            .addComponent(jComboBox4, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel9)
                                .addGap(0, 0, Short.MAX_VALUE)))))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3))
                        .addGap(27, 27, 27)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel10)
                            .addComponent(jComboBox4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(27, 27, 27)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(25, 25, 25)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(jRadioButton1)
                    .addComponent(jRadioButton2)
                    .addComponent(jLabel9))
                .addGap(56, 56, 56)
                .addComponent(jButton1)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton2)
                    .addComponent(jButton3))
                .addContainerGap())
        );

        jButton4.setText("Apron-Domestic Passenger");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton5.setText("Apron-International Passenger");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jButton6.setText("Apron-Cargo");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGap(243, 243, 243)
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton4)
                        .addGap(18, 18, 18)
                        .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 41, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(42, 42, 42)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 26, Short.MAX_VALUE)
                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

        static int apron_domestic[]=new int[40];//disp
        static int apron_international[]=new int[40];//disp
        static int apron_cargo[]=new int[40];//disp
        static int flag=0;//Rish
        static int a1top=0,b1top=0;//Not having terminal
        static int a2top=20,b2top=20;//Having terminal
        static int c1top=0;//Domestic
        static int c2top=20;//International
        
        static parkingMapping1 pm1=new parkingMapping1();
        static parkingMapping2 pm2=new parkingMapping2();
        static parkingMapping3 pm3=new parkingMapping3();
        
    int size;
    String type;
        
    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        
//        jComboBox4.removeAllItems();
        
        try
        {
            stmt.close();
        }
        catch(Exception e)
        {}
        this.setVisible(false);
        
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        
        jTextField1.setText("");//By Rish
        size=0;//By Rish
        jComboBox2.setSelectedIndex(0);//By Rish
        type="";//By Rish
        buttonGroup1.clearSelection();//By Rish
        DateFormat dateFormat = new SimpleDateFormat("dd/MM/yyyy HH:mm:ss");
        Date date = new Date();
        String time=(dateFormat.format(date));
        activity[acttop]=time+"    COMMAND--Clear all Aprons";
        acttop++;
        for(int a=0;a<40;a++)//By Rish
        {
            apron_domestic[a]=0;
            apron_international[a]=0;
            apron_cargo[a]=0;
        }
        jLabel8.setText("All data deleted....");//By Rish
        
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        
        if((jTextField1.getText().equals("0"))||(jTextField1.getText().equals(""))||(jComboBox4.getSelectedIndex()==0)||(jComboBox2.getSelectedIndex()==0)||(buttonGroup1.getSelection()==null))
        {
            jLabel8.setText("Invalid arguments passed");
        }
        else
        {
            if((jComboBox2.getSelectedIndex()==1)&&(jRadioButton2.isSelected()==true)&&("Passenger".equals(type)))
            {
                flag=1;
            }
            else if((jComboBox2.getSelectedIndex()==1)&&(jRadioButton1.isSelected()==true)&&("Passenger".equals(type)))
            {
                flag=2;
            }
            else if((jComboBox2.getSelectedIndex()==2)&&(jRadioButton2.isSelected()==true)&&("Passenger".equals(type)))
            {
                flag=3;
            }
            else if((jComboBox2.getSelectedIndex()==2)&&(jRadioButton1.isSelected()==true)&&("Passenger".equals(type)))
            {
                flag=4;
            }
            else if((jComboBox2.getSelectedIndex()==1)&&(jRadioButton2.isSelected()==true)&&("Cargo".equals(type)))
            {
                flag=5;
            }
            else if((jComboBox2.getSelectedIndex()==2)&&(jRadioButton2.isSelected()==true)&&("Cargo".equals(type)))
            {
                flag=6;
            }
            else if((jComboBox2.getSelectedIndex()==1)&&(jRadioButton1.isSelected()==true)&&("Cargo".equals(type)))
            {
                jLabel8.setText("Cargo dont require a terminal..");
            }
            else if((jComboBox2.getSelectedIndex()==2)&&(jRadioButton1.isSelected()==true)&&("Cargo".equals(type)))
            {
                jLabel8.setText("Cargo dont require a terminal..");
            }
            
        String serial=jTextField1.getText();
        if((flag==1)||(flag==2)||(flag==3)||(flag==4)||(flag==5)||(flag==6))
        {
            DateFormat dateFormat = new SimpleDateFormat("dd/MM/yyyy HH:mm:ss");
            Date date = new Date();
            String time=(dateFormat.format(date));
            activity[acttop]=time+"    COMMAND--ADD TO APRON PLANE: "+serial;
            acttop++;
        }
                        
            switch(flag)
            {
                case 1:
                    if(size==1)
                    {
                        a1top=0;
                        while(flag!=0)
                        {
                            if(a1top==20)
                            {
                                jLabel8.setText("No more space in Apron");
                                flag=0;
                            }
                            else
                            {
                                if(apron_domestic[a1top]==0)
                                {
                                    apron_domestic[a1top]=Integer.parseInt(serial);
                                    flag=0;
                                    jTextField1.setText("");//By Rish
                                    size=0;//By Rish
                                    jComboBox2.setSelectedIndex(0);//By Rish
                                    type="";//By Rish
                                    jComboBox4.setSelectedIndex(0);
                                    jLabel11.setText("");
                                    jLabel12.setText("");
                                    jLabel13.setText("");
                                    buttonGroup1.clearSelection();//By Rish
                                    jLabel8.setText("Saved....          Enter details of next plane....");
                                }
                                else
                                    a1top++;
                            }
                        }
                        break;
                        
                    }
                    else if(size==2)
                    {
                        a1top=0;
                        while(flag!=0)
                        {
                            if(a1top==19)
                            {
                                jLabel8.setText("No more space in Apron");
                                flag=0;
                            }
                            else
                            {
                                if((apron_domestic[a1top]==0)&&(apron_domestic[a1top+1]==0))
                                {
                                    apron_domestic[a1top]=Integer.parseInt(serial);
                                    apron_domestic[a1top+1]=Integer.parseInt(serial);
                                    flag=0;
                                    jTextField1.setText("");//By Rish
                                    size=0;//By Rish
                                    jComboBox2.setSelectedIndex(0);//By Rish
                                    type="";//By Rish
                                    jComboBox4.setSelectedIndex(0);
                                    jLabel11.setText("");
                                    jLabel12.setText("");
                                    jLabel13.setText("");
                                    buttonGroup1.clearSelection();//By Rish
                                    jLabel8.setText("Saved....          Enter details of next plane....");
                                }
                                else
                                    a1top++;
                            }
                        }
                        break;
                    }
                    else if(size==3)
                    {
                        a1top=0;
                        while(flag!=0)
                        {
                            if(a1top==18)
                            {
                                jLabel8.setText("No more space in Apron");
                                flag=0;
                            }
                            else
                            {
                                if((apron_domestic[a1top]==0)&&(apron_domestic[a1top+1]==0)&&(apron_domestic[a1top+2]==0))
                                {
                                    apron_domestic[a1top]=Integer.parseInt(serial);
                                    apron_domestic[a1top+1]=Integer.parseInt(serial);
                                    apron_domestic[a1top+2]=Integer.parseInt(serial);
                                    flag=0;
                                    jTextField1.setText("");//By Rish
                                    size=0;//By Rish
                                    jComboBox2.setSelectedIndex(0);//By Rish
                                    type="";//By Rish111111
                                    jComboBox4.setSelectedIndex(0);
                                    jLabel11.setText("");
                                    jLabel12.setText("");
                                    jLabel13.setText("");
                                    buttonGroup1.clearSelection();//By Rish
                                    jLabel8.setText("Saved....          Enter details of next plane....");
                                }
                                else
                                    a1top++;
                            }
                        }
                        break;
                    }
                break;
                    
                case 2:
                    if(size==1)
                    {
                        a2top=20;
                        while(flag!=0)
                        {
                            if(a2top==40)
                            {
                                jLabel8.setText("No more space in Apron");
                                flag=0;
                            }
                            else
                            {
                                if(apron_domestic[a2top]==0)
                                {
                                    apron_domestic[a2top]=Integer.parseInt(serial);
                                    flag=0;
                                    jTextField1.setText("");//By Rish
                                    size=0;//By Rish
                                    jComboBox2.setSelectedIndex(0);//By Rish
                                    type="";//By Rish
                                    jComboBox4.setSelectedIndex(0);
                                    jLabel11.setText("");
                                    jLabel12.setText("");
                                    jLabel13.setText("");
                                    buttonGroup1.clearSelection();//By Rish
                                    jLabel8.setText("Saved....          Enter details of next plane....");
                                }
                                else
                                    a2top++;
                            }
                        }
                        break;
                        
                    }
                    else if(size==2)
                    {
                        a2top=20;
                        while(flag!=0)
                        {
                            if(a2top==39)
                            {
                                jLabel8.setText("No more space in Apron");
                                flag=0;
                            }
                            else
                            {
                                if((apron_domestic[a2top]==0)&&(apron_domestic[a2top+1]==0))
                                {
                                    apron_domestic[a2top]=Integer.parseInt(serial);
                                    apron_domestic[a2top+1]=Integer.parseInt(serial);
                                    flag=0;
                                    jTextField1.setText("");//By Rish
                                    size=0;//By Rish
                                    jComboBox2.setSelectedIndex(0);//By Rish
                                    type="";//By Rish
                                    jComboBox4.setSelectedIndex(0);
                                    jLabel11.setText("");
                                    jLabel12.setText("");
                                    jLabel13.setText("");
                                    buttonGroup1.clearSelection();//By Rish
                                    jLabel8.setText("Saved....          Enter details of next plane....");
                                }
                                else
                                    a2top++;
                            }
                        }
                        break;
                    }
                    else if(size==3)
                    {
                        a2top=20;
                        while(flag!=0)
                        {
                            if(a2top==38)
                            {
                                jLabel8.setText("No more space in Apron");
                                flag=0;
                            }
                            else
                            {
                                if((apron_domestic[a2top]==0)&&(apron_domestic[a2top+1]==0)&&(apron_domestic[a2top+2]==0))
                                {
                                    apron_domestic[a2top]=Integer.parseInt(serial);
                                    apron_domestic[a2top+1]=Integer.parseInt(serial);
                                    apron_domestic[a2top+2]=Integer.parseInt(serial);
                                    flag=0;
                                    jTextField1.setText("");//By Rish
                                    size=0;//By Rish
                                    jComboBox2.setSelectedIndex(0);//By Rish
                                    type="";//By Rish111111
                                    jComboBox4.setSelectedIndex(0);
                                    jLabel11.setText("");
                                    jLabel12.setText("");
                                    jLabel13.setText("");
                                    buttonGroup1.clearSelection();//By Rish
                                    jLabel8.setText("Saved....          Enter details of next plane....");
                                }
                                else
                                    a2top++;
                            }
                        }
                        break;
                    }
                break;
                    
                case 3:
                    if(size==1)
                    {
                        b1top=0;
                        while(flag!=0)
                        {
                            if(b1top==20)
                            {
                                jLabel8.setText("No more space in Apron");
                                flag=0;
                            }
                            else
                            {
                                if(apron_international[b1top]==0)
                                {
                                    apron_international[b1top]=Integer.parseInt(serial);
                                    flag=0;
                                    jTextField1.setText("");//By Rish
                                    size=0;//By Rish
                                    jComboBox2.setSelectedIndex(0);//By Rish
                                    type="";//By Rish
                                    jComboBox4.setSelectedIndex(0);
                                    jLabel11.setText("");
                                    jLabel12.setText("");
                                    jLabel13.setText("");
                                    buttonGroup1.clearSelection();//By Rish
                                    jLabel8.setText("Saved....          Enter details of next plane....");
                                }
                                else
                                    b1top++;
                            }
                        }
                        break;
                        
                    }
                    else if(size==2)
                    {
                        b1top=0;
                        while(flag!=0)
                        {
                            if(b1top==19)
                            {
                                jLabel8.setText("No more space in Apron");
                                flag=0;
                            }
                            else
                            {
                                if((apron_international[b1top]==0)&&(apron_international[b1top+1]==0))
                                {
                                    apron_international[b1top]=Integer.parseInt(serial);
                                    apron_international[b1top+1]=Integer.parseInt(serial);
                                    flag=0;
                                    jTextField1.setText("");//By Rish
                                    size=0;//By Rish
                                    jComboBox2.setSelectedIndex(0);//By Rish
                                    type="";//By Rish
                                    jComboBox4.setSelectedIndex(0);
                                    jLabel11.setText("");
                                    jLabel12.setText("");
                                    jLabel13.setText("");
                                    buttonGroup1.clearSelection();//By Rish
                                    jLabel8.setText("Saved....          Enter details of next plane....");
                                }
                                else
                                    b1top++;
                            }
                        }
                        break;
                    }
                    else if(size==3)
                    {
                        b1top=0;
                        while(flag!=0)
                        {
                            if(b1top==18)
                            {
                                jLabel8.setText("No more space in Apron");
                                flag=0;
                            }
                            else
                            {
                                if((apron_international[b1top]==0)&&(apron_international[b1top+1]==0)&&(apron_international[b1top+2]==0))
                                {
                                    apron_international[b1top]=Integer.parseInt(serial);
                                    apron_international[b1top+1]=Integer.parseInt(serial);
                                    apron_international[b1top+2]=Integer.parseInt(serial);
                                    flag=0;
                                    jTextField1.setText("");//By Rish
                                    size=0;//By Rish
                                    jComboBox2.setSelectedIndex(0);//By Rish
                                    type="";//By Rish111111
                                    jComboBox4.setSelectedIndex(0);
                                    jLabel11.setText("");
                                    jLabel12.setText("");
                                    jLabel13.setText("");
                                    buttonGroup1.clearSelection();//By Rish
                                    jLabel8.setText("Saved....          Enter details of next plane....");
                                }
                                else
                                    b1top++;
                            }
                        }
                        break;
                    }
                break;

                case 4:
                    if(size==1)
                    {
                        b2top=20;
                        while(flag!=0)
                        {
                            if(b2top==40)
                            {
                                jLabel8.setText("No more space in Apron");
                                flag=0;
                            }
                            else
                            {
                                if(apron_international[b2top]==0)
                                {
                                    apron_international[b2top]=Integer.parseInt(serial);
                                    flag=0;
                                    jTextField1.setText("");//By Rish
                                    size=0;//By Rish
                                    jComboBox2.setSelectedIndex(0);//By Rish
                                    type="";//By Rish
                                    jComboBox4.setSelectedIndex(0);
                                    jLabel11.setText("");
                                    jLabel12.setText("");
                                    jLabel13.setText("");
                                    buttonGroup1.clearSelection();//By Rish
                                    jLabel8.setText("Saved....          Enter details of next plane....");
                                }
                                else
                                    b2top++;
                            }
                        }
                        break;
                        
                    }
                    else if(size==2)
                    {
                        b2top=20;
                        while(flag!=0)
                        {
                            if(b2top==39)
                            {
                                jLabel8.setText("No more space in Apron");
                                flag=0;
                            }
                            else
                            {
                                if((apron_international[b2top]==0)&&(apron_international[b2top+1]==0))
                                {
                                    apron_international[b2top]=Integer.parseInt(serial);
                                    apron_international[b2top+1]=Integer.parseInt(serial);
                                    flag=0;
                                    jTextField1.setText("");//By Rish
                                    size=0;//By Rish
                                    jComboBox2.setSelectedIndex(0);//By Rish
                                    type="";//By Rish
                                    jComboBox4.setSelectedIndex(0);
                                    jLabel11.setText("");
                                    jLabel12.setText("");
                                    jLabel13.setText("");
                                    buttonGroup1.clearSelection();//By Rish
                                    jLabel8.setText("Saved....          Enter details of next plane....");
                                }
                                else
                                    b2top++;
                            }
                        }
                        break;
                    }
                    else if(size==3)
                    {
                        b2top=20;
                        while(flag!=0)
                        {
                            if(b2top==38)
                            {
                                jLabel8.setText("No more space in Apron");
                                flag=0;
                            }
                            else
                            {
                                if((apron_international[b2top]==0)&&(apron_international[b2top+1]==0)&&(apron_international[b2top+2]==0))
                                {
                                    apron_international[b2top]=Integer.parseInt(serial);
                                    apron_international[b2top+1]=Integer.parseInt(serial);
                                    apron_international[b2top+2]=Integer.parseInt(serial);
                                    flag=0;
                                    jTextField1.setText("");//By Rish
                                    size=0;//By Rish
                                    jComboBox2.setSelectedIndex(0);//By Rish
                                    type="";//By Rish111111
                                    jComboBox4.setSelectedIndex(0);
                                    jLabel11.setText("");
                                    jLabel12.setText("");
                                    jLabel13.setText("");
                                    buttonGroup1.clearSelection();//By Rish
                                    jLabel8.setText("Saved....          Enter details of next plane....");
                                }
                                else
                                    b2top++;
                            }
                        }
                        break;
                    }
                break;

                case 5:
                    if(size==1)
                    {
                        c1top=0;
                        while(flag!=0)
                        {
                            if(c1top==20)
                            {
                                jLabel8.setText("No more space in Apron");
                                flag=0;
                            }
                            else
                            {
                                if(apron_cargo[c1top]==0)
                                {
                                    apron_cargo[c1top]=Integer.parseInt(serial);
                                    flag=0;
                                    jTextField1.setText("");//By Rish
                                    size=0;//By Rish
                                    jComboBox2.setSelectedIndex(0);//By Rish
                                    type="";//By Rish
                                    jComboBox4.setSelectedIndex(0);
                                    jLabel11.setText("");
                                    jLabel12.setText("");
                                    jLabel13.setText("");
                                    buttonGroup1.clearSelection();//By Rish
                                    jLabel8.setText("Saved....          Enter details of next plane....");
                                }
                                else
                                    c1top++;
                            }
                        }
                        break;
                        
                    }
                    else if(size==2)
                    {
                        c1top=0;
                        while(flag!=0)
                        {
                            if(c1top==19)
                            {
                                jLabel8.setText("No more space in Apron");
                                flag=0;
                            }
                            else
                            {
                                if((apron_cargo[c1top]==0)&&(apron_cargo[c1top+1]==0))
                                {
                                    apron_cargo[c1top]=Integer.parseInt(serial);
                                    apron_cargo[c1top+1]=Integer.parseInt(serial);
                                    flag=0;
                                    jTextField1.setText("");//By Rish
                                    size=0;//By Rish
                                    jComboBox2.setSelectedIndex(0);//By Rish
                                    type="";//By Rish
                                    jComboBox4.setSelectedIndex(0);
                                    jLabel11.setText("");
                                    jLabel12.setText("");
                                    jLabel13.setText("");
                                    buttonGroup1.clearSelection();//By Rish
                                    jLabel8.setText("Saved....          Enter details of next plane....");
                                }
                                else
                                    c1top++;
                            }
                        }
                        break;
                    }
                    else if(size==3)
                    {
                        c1top=0;
                        while(flag!=0)
                        {
                            if(c1top==18)
                            {
                                jLabel8.setText("No more space in Apron");
                                flag=0;
                            }
                            else
                            {
                                if((apron_cargo[c1top]==0)&&(apron_cargo[c1top+1]==0)&&(apron_cargo[c1top+2]==0))
                                {
                                    apron_cargo[c1top]=Integer.parseInt(serial);
                                    apron_cargo[c1top+1]=Integer.parseInt(serial);
                                    apron_cargo[c1top+2]=Integer.parseInt(serial);
                                    flag=0;
                                    jTextField1.setText("");//By Rish
                                    size=0;//By Rish
                                    jComboBox2.setSelectedIndex(0);//By Rish
                                    type="";//By Rish111111
                                    jComboBox4.setSelectedIndex(0);
                                    jLabel11.setText("");
                                    jLabel12.setText("");
                                    jLabel13.setText("");
                                    buttonGroup1.clearSelection();//By Rish
                                    jLabel8.setText("Saved....          Enter details of next plane....");
                                }
                                else
                                    c1top++;
                            }
                        }
                        break;
                    }
                break;

                case 6:
                    if(size==1)
                    {
                        c1top=20;
                        while(flag!=0)
                        {
                            if(c1top==40)
                            {
                                jLabel8.setText("No more space in Apron");
                                flag=0;
                            }
                            else
                            {
                                if(apron_cargo[c2top]==0)
                                {
                                    apron_cargo[c2top]=Integer.parseInt(serial);
                                    flag=0;
                                    jTextField1.setText("");//By Rish
                                    size=0;//By Rish
                                    jComboBox2.setSelectedIndex(0);//By Rish
                                    type="";//By Rish
                                    jComboBox4.setSelectedIndex(0);
                                    jLabel11.setText("");
                                    jLabel12.setText("");
                                    jLabel13.setText("");
                                    buttonGroup1.clearSelection();//By Rish
                                    jLabel8.setText("Saved....          Enter details of next plane....");
                                }
                                else
                                    c2top++;
                            }
                        }
                        break;
                        
                    }
                    else if(size==2)
                    {
                        c2top=20;
                        while(flag!=0)
                        {
                            if(c2top==39)
                            {
                                jLabel8.setText("No more space in Apron");
                                flag=0;
                            }
                            else
                            {
                                if((apron_cargo[c2top]==0)&&(apron_cargo[c2top+1]==0))
                                {
                                    apron_cargo[c2top]=Integer.parseInt(serial);
                                    apron_cargo[c2top+1]=Integer.parseInt(serial);
                                    flag=0;
                                    jTextField1.setText("");//By Rish
                                    size=0;//By Rish
                                    jComboBox2.setSelectedIndex(0);//By Rish
                                    type="";//By Rish
                                    jComboBox4.setSelectedIndex(0);
                                    jLabel11.setText("");
                                    jLabel12.setText("");
                                    jLabel13.setText("");
                                    buttonGroup1.clearSelection();//By Rish
                                    jLabel8.setText("Saved....          Enter details of next plane....");
                                }
                                else
                                    c2top++;
                            }
                        }
                        break;
                    }
                    else if(size==3)
                    {
                        c2top=20;
                        while(flag!=0)
                        {
                            if(c2top==38)
                            {
                                jLabel8.setText("No more space in Apron");
                                flag=0;
                            }
                            else
                            {
                                if((apron_cargo[c2top]==0)&&(apron_cargo[c2top+1]==0)&&(apron_cargo[c2top+2]==0))
                                {
                                    apron_cargo[c2top]=Integer.parseInt(serial);
                                    apron_cargo[c2top+1]=Integer.parseInt(serial);
                                    apron_cargo[c2top+2]=Integer.parseInt(serial);
                                    flag=0;
                                    jTextField1.setText("");//By Rish
                                    size=0;//By Rish
                                    jComboBox2.setSelectedIndex(0);//By Rish
                                    type="";//By Rish111111
                                    jComboBox4.setSelectedIndex(0);
                                    jLabel11.setText("");
                                    jLabel12.setText("");
                                    jLabel13.setText("");
                                    buttonGroup1.clearSelection();//By Rish
                                    jLabel8.setText("Saved....          Enter details of next plane....");
                                }
                                else
                                    c2top++;
                            }
                        }
                        break;
                    }
            }
            flag=0;
            jLabel11.setText("");
            jLabel12.setText("");
            jLabel13.setText("");
        }
        try
        {
            rs.first();
        }
        catch(SQLException ex)
        {
            JOptionPane.showMessageDialog(EntryPage.this, ex.getMessage());
        }
        
        
        
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:

        pm1.setVisible(true);
        
        if(apron_domestic[0]!=0)
        {
            pm1.jLabel1.setForeground(java.awt.Color.red);
            pm1.jLabel1.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.red));
        }
        else
        {
            pm1.jLabel1.setForeground(java.awt.Color.green);
            pm1.jLabel1.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.green));
        }
        if(apron_domestic[1]!=0)
        {
            pm1.jLabel2.setForeground(java.awt.Color.red);
            pm1.jLabel2.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.red));
        }
        else
        {
            pm1.jLabel2.setForeground(java.awt.Color.green);
            pm1.jLabel2.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.green));
        }
        if(apron_domestic[2]!=0)
        {
            pm1.jLabel3.setForeground(java.awt.Color.red);
            pm1.jLabel3.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.red));
        }
        else
        {
            pm1.jLabel3.setForeground(java.awt.Color.green);
            pm1.jLabel3.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.green));
        }
        if(apron_domestic[3]!=0)
        {
            pm1.jLabel4.setForeground(java.awt.Color.red);
            pm1.jLabel4.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.red));
        }
        else
        {
            pm1.jLabel4.setForeground(java.awt.Color.green);
            pm1.jLabel4.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.green));
        }
        if(apron_domestic[4]!=0)
        {
            pm1.jLabel5.setForeground(java.awt.Color.red);
            pm1.jLabel5.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.red));
        }
        else
        {
            pm1.jLabel5.setForeground(java.awt.Color.green);
            pm1.jLabel5.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.green));
        }
        if(apron_domestic[5]!=0)
        {
            pm1.jLabel6.setForeground(java.awt.Color.red);
            pm1.jLabel6.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.red));
        }
        else
        {
            pm1.jLabel6.setForeground(java.awt.Color.green);
            pm1.jLabel6.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.green));
        }
        if(apron_domestic[6]!=0)
        {
            pm1.jLabel7.setForeground(java.awt.Color.red);
            pm1.jLabel7.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.red));
        }
        else
        {
            pm1.jLabel7.setForeground(java.awt.Color.green);
            pm1.jLabel7.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.green));
        }
        if(apron_domestic[7]!=0)
        {
            pm1.jLabel8.setForeground(java.awt.Color.red);
            pm1.jLabel8.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.red));
        }
        else
        {
            pm1.jLabel8.setForeground(java.awt.Color.green);
            pm1.jLabel8.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.green));
        }
        if(apron_domestic[8]!=0)
        {
            pm1.jLabel9.setForeground(java.awt.Color.red);
            pm1.jLabel9.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.red));
        }
        else
        {
            pm1.jLabel9.setForeground(java.awt.Color.green);
            pm1.jLabel9.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.green));
        }
        if(apron_domestic[9]!=0)
        {
            pm1.jLabel10.setForeground(java.awt.Color.red);
            pm1.jLabel10.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.red));
        }
        else
        {
            pm1.jLabel10.setForeground(java.awt.Color.green);
            pm1.jLabel10.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.green));
        }
        if(apron_domestic[10]!=0)
        {
            pm1.jLabel11.setForeground(java.awt.Color.red);
            pm1.jLabel11.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.red));
        }
        else
        {
            pm1.jLabel11.setForeground(java.awt.Color.green);
            pm1.jLabel11.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.green));
        }
        if(apron_domestic[11]!=0)
        {
            pm1.jLabel12.setForeground(java.awt.Color.red);
            pm1.jLabel12.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.red));
        }
        else
        {
            pm1.jLabel12.setForeground(java.awt.Color.green);
            pm1.jLabel12.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.green));
        }
        if(apron_domestic[12]!=0)
        {
            pm1.jLabel13.setForeground(java.awt.Color.red);
            pm1.jLabel13.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.red));
        }
        else
        {
            pm1.jLabel13.setForeground(java.awt.Color.green);
            pm1.jLabel13.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.green));
        }
        if(apron_domestic[13]!=0)
        {
            pm1.jLabel14.setForeground(java.awt.Color.red);
            pm1.jLabel14.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.red));
        }
        else
        {
            pm1.jLabel14.setForeground(java.awt.Color.green);
            pm1.jLabel14.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.green));
        }
        if(apron_domestic[14]!=0)
        {
            pm1.jLabel15.setForeground(java.awt.Color.red);
            pm1.jLabel15.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.red));
        }
        else
        {
            pm1.jLabel15.setForeground(java.awt.Color.green);
            pm1.jLabel15.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.green));
        }
        if(apron_domestic[15]!=0)
        {
            pm1.jLabel16.setForeground(java.awt.Color.red);
            pm1.jLabel16.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.red));
        }
        else
        {
            pm1.jLabel16.setForeground(java.awt.Color.green);
            pm1.jLabel16.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.green));
        }
        if(apron_domestic[16]!=0)
        {
            pm1.jLabel17.setForeground(java.awt.Color.red);
            pm1.jLabel17.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.red));
        }
        else
        {
            pm1.jLabel17.setForeground(java.awt.Color.green);
            pm1.jLabel17.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.green));
        }
        if(apron_domestic[17]!=0)
        {
            pm1.jLabel18.setForeground(java.awt.Color.red);
            pm1.jLabel18.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.red));
        }
        else
        {
            pm1.jLabel18.setForeground(java.awt.Color.green);
            pm1.jLabel18.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.green));
        }
        if(apron_domestic[18]!=0)
        {
            pm1.jLabel19.setForeground(java.awt.Color.red);
            pm1.jLabel19.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.red));
        }
        else
        {
            pm1.jLabel19.setForeground(java.awt.Color.green);
            pm1.jLabel19.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.green));
        }
        if(apron_domestic[19]!=0)
        {
            pm1.jLabel20.setForeground(java.awt.Color.red);
            pm1.jLabel20.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.red));
        }
        else
        {
            pm1.jLabel20.setForeground(java.awt.Color.green);
            pm1.jLabel20.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.green));
        }
        
        if(apron_domestic[20]!=0)
        {
            pm1.jLabel21.setForeground(java.awt.Color.red);
            pm1.jLabel21.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.red));
        }
        else
        {
            pm1.jLabel21.setForeground(java.awt.Color.green);
            pm1.jLabel21.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.green));
        }
        if(apron_domestic[21]!=0)
        {
            pm1.jLabel22.setForeground(java.awt.Color.red);
            pm1.jLabel22.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.red));
        }
        else
        {
            pm1.jLabel22.setForeground(java.awt.Color.green);
            pm1.jLabel22.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.green));
        }
        if(apron_domestic[22]!=0)
        {
            pm1.jLabel23.setForeground(java.awt.Color.red);
            pm1.jLabel23.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.red));
        }
        else
        {
            pm1.jLabel23.setForeground(java.awt.Color.green);
            pm1.jLabel23.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.green));
        }
        if(apron_domestic[23]!=0)
        {
            pm1.jLabel24.setForeground(java.awt.Color.red);
            pm1.jLabel24.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.red));
        }
        else
        {
            pm1.jLabel24.setForeground(java.awt.Color.green);
            pm1.jLabel24.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.green));
        }
        if(apron_domestic[24]!=0)
        {
            pm1.jLabel25.setForeground(java.awt.Color.red);
            pm1.jLabel25.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.red));
        }
        else
        {
            pm1.jLabel25.setForeground(java.awt.Color.green);
            pm1.jLabel25.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.green));
        }
        if(apron_domestic[25]!=0)
        {
            pm1.jLabel26.setForeground(java.awt.Color.red);
            pm1.jLabel26.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.red));
        }
        else
        {
            pm1.jLabel26.setForeground(java.awt.Color.green);
            pm1.jLabel26.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.green));
        }
        if(apron_domestic[26]!=0)
        {
            pm1.jLabel27.setForeground(java.awt.Color.red);
            pm1.jLabel27.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.red));
        }
        else
        {
            pm1.jLabel27.setForeground(java.awt.Color.green);
            pm1.jLabel27.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.green));
        }
        if(apron_domestic[27]!=0)
        {
            pm1.jLabel28.setForeground(java.awt.Color.red);
            pm1.jLabel28.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.red));
        }
        else
        {
            pm1.jLabel28.setForeground(java.awt.Color.green);
            pm1.jLabel28.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.green));
        }
        if(apron_domestic[28]!=0)
        {
            pm1.jLabel29.setForeground(java.awt.Color.red);
            pm1.jLabel29.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.red));
        }
        else
        {
            pm1.jLabel29.setForeground(java.awt.Color.green);
            pm1.jLabel29.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.green));
        }
        if(apron_domestic[29]!=0)
        {
            pm1.jLabel30.setForeground(java.awt.Color.red);
            pm1.jLabel30.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.red));
        }
        else
        {
            pm1.jLabel30.setForeground(java.awt.Color.green);
            pm1.jLabel30.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.green));
        }
        if(apron_domestic[30]!=0)
        {
            pm1.jLabel31.setForeground(java.awt.Color.red);
            pm1.jLabel31.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.red));
        }
        else
        {
            pm1.jLabel31.setForeground(java.awt.Color.green);
            pm1.jLabel31.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.green));
        }
        if(apron_domestic[31]!=0)
        {
            pm1.jLabel32.setForeground(java.awt.Color.red);
            pm1.jLabel32.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.red));
        }
        else
        {
            pm1.jLabel32.setForeground(java.awt.Color.green);
            pm1.jLabel32.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.green));
        }
        if(apron_domestic[32]!=0)
        {
            pm1.jLabel33.setForeground(java.awt.Color.red);
            pm1.jLabel33.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.red));
        }
        else
        {
            pm1.jLabel33.setForeground(java.awt.Color.green);
            pm1.jLabel33.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.green));
        }
        if(apron_domestic[33]!=0)
        {
            pm1.jLabel34.setForeground(java.awt.Color.red);
            pm1.jLabel34.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.red));
        }
        else
        {
            pm1.jLabel34.setForeground(java.awt.Color.green);
            pm1.jLabel34.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.green));
        }
        if(apron_domestic[34]!=0)
        {
            pm1.jLabel35.setForeground(java.awt.Color.red);
            pm1.jLabel35.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.red));
        }
        else
        {
            pm1.jLabel35.setForeground(java.awt.Color.green);
            pm1.jLabel35.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.green));
        }
        if(apron_domestic[35]!=0)
        {
            pm1.jLabel36.setForeground(java.awt.Color.red);
            pm1.jLabel36.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.red));
        }
        else
        {
            pm1.jLabel36.setForeground(java.awt.Color.green);
            pm1.jLabel36.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.green));
        }
        if(apron_domestic[36]!=0)
        {
            pm1.jLabel37.setForeground(java.awt.Color.red);
            pm1.jLabel37.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.red));
        }
        else
        {
            pm1.jLabel37.setForeground(java.awt.Color.green);
            pm1.jLabel37.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.green));
        }
        if(apron_domestic[37]!=0)
        {
            pm1.jLabel38.setForeground(java.awt.Color.red);
            pm1.jLabel38.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.red));
        }
        else
        {
            pm1.jLabel38.setForeground(java.awt.Color.green);
            pm1.jLabel38.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.green));
        }
        if(apron_domestic[38]!=0)
        {
            pm1.jLabel39.setForeground(java.awt.Color.red);
            pm1.jLabel39.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.red));
        }
        else
        {
            pm1.jLabel39.setForeground(java.awt.Color.green);
            pm1.jLabel39.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.green));
        }
        if(apron_domestic[39]!=0)
        {
            pm1.jLabel40.setForeground(java.awt.Color.red);
            pm1.jLabel40.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.red));
        }
        else
        {
            pm1.jLabel40.setForeground(java.awt.Color.green);
            pm1.jLabel40.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.green));
        }
        
        pm1.jLabel1.setText(" "+String.valueOf(apron_domestic[0])+" ");
        pm1.jLabel2.setText(" "+String.valueOf(apron_domestic[1])+" ");
        pm1.jLabel3.setText(" "+String.valueOf(apron_domestic[2])+" ");
        pm1.jLabel4.setText(" "+String.valueOf(apron_domestic[3])+" ");
        pm1.jLabel5.setText(" "+String.valueOf(apron_domestic[4])+" ");
        pm1.jLabel6.setText(" "+String.valueOf(apron_domestic[5])+" ");
        pm1.jLabel7.setText(" "+String.valueOf(apron_domestic[6])+" ");
        pm1.jLabel8.setText(" "+String.valueOf(apron_domestic[7])+" ");
        pm1.jLabel9.setText(" "+String.valueOf(apron_domestic[8])+" ");
        pm1.jLabel10.setText(" "+String.valueOf(apron_domestic[9])+" ");
        pm1.jLabel11.setText(" "+String.valueOf(apron_domestic[10])+" ");
        pm1.jLabel12.setText(" "+String.valueOf(apron_domestic[11])+" ");
        pm1.jLabel13.setText(" "+String.valueOf(apron_domestic[12])+" ");
        pm1.jLabel14.setText(" "+String.valueOf(apron_domestic[13])+" ");
        pm1.jLabel15.setText(" "+String.valueOf(apron_domestic[14])+" ");
        pm1.jLabel16.setText(" "+String.valueOf(apron_domestic[15])+" ");
        pm1.jLabel17.setText(" "+String.valueOf(apron_domestic[16])+" ");
        pm1.jLabel18.setText(" "+String.valueOf(apron_domestic[17])+" ");
        pm1.jLabel19.setText(" "+String.valueOf(apron_domestic[18])+" ");
        pm1.jLabel20.setText(" "+String.valueOf(apron_domestic[19])+" ");
        pm1.jLabel21.setText(" "+String.valueOf(apron_domestic[20])+" ");
        pm1.jLabel22.setText(" "+String.valueOf(apron_domestic[21])+" ");
        pm1.jLabel23.setText(" "+String.valueOf(apron_domestic[22])+" ");
        pm1.jLabel24.setText(" "+String.valueOf(apron_domestic[23])+" ");
        pm1.jLabel25.setText(" "+String.valueOf(apron_domestic[24])+" ");
        pm1.jLabel26.setText(" "+String.valueOf(apron_domestic[25])+" ");
        pm1.jLabel27.setText(" "+String.valueOf(apron_domestic[26])+" ");
        pm1.jLabel28.setText(" "+String.valueOf(apron_domestic[27])+" ");
        pm1.jLabel29.setText(" "+String.valueOf(apron_domestic[28])+" ");
        pm1.jLabel30.setText(" "+String.valueOf(apron_domestic[29])+" ");
        pm1.jLabel31.setText(" "+String.valueOf(apron_domestic[30])+" ");
        pm1.jLabel32.setText(" "+String.valueOf(apron_domestic[31])+" ");
        pm1.jLabel33.setText(" "+String.valueOf(apron_domestic[32])+" ");
        pm1.jLabel34.setText(" "+String.valueOf(apron_domestic[33])+" ");
        pm1.jLabel35.setText(" "+String.valueOf(apron_domestic[34])+" ");
        pm1.jLabel36.setText(" "+String.valueOf(apron_domestic[35])+" ");
        pm1.jLabel37.setText(" "+String.valueOf(apron_domestic[36])+" ");
        pm1.jLabel38.setText(" "+String.valueOf(apron_domestic[37])+" ");
        pm1.jLabel39.setText(" "+String.valueOf(apron_domestic[38])+" ");
        pm1.jLabel40.setText(" "+String.valueOf(apron_domestic[39])+" ");
       
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
        
        pm2.setVisible(true);
        
        if(apron_international[0]!=0)
        {
            pm2.jLabel1.setForeground(java.awt.Color.red);
            pm2.jLabel1.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.red));
        }
        else
        {
            pm2.jLabel1.setForeground(java.awt.Color.green);
            pm2.jLabel1.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.green));
        }
        if(apron_international[1]!=0)
        {
            pm2.jLabel2.setForeground(java.awt.Color.red);
            pm2.jLabel2.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.red));
        }
        else
        {
            pm2.jLabel2.setForeground(java.awt.Color.green);
            pm2.jLabel2.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.green));
        }
        if(apron_international[2]!=0)
        {
            pm2.jLabel3.setForeground(java.awt.Color.red);
            pm2.jLabel3.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.red));
        }
        else
        {
            pm2.jLabel3.setForeground(java.awt.Color.green);
            pm2.jLabel3.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.green));
        }
        if(apron_international[3]!=0)
        {
            pm2.jLabel4.setForeground(java.awt.Color.red);
            pm2.jLabel4.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.red));
        }
        else
        {
            pm2.jLabel4.setForeground(java.awt.Color.green);
            pm2.jLabel4.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.green));
        }
        if(apron_international[4]!=0)
        {
            pm2.jLabel5.setForeground(java.awt.Color.red);
            pm2.jLabel5.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.red));
        }
        else
        {
            pm2.jLabel5.setForeground(java.awt.Color.green);
            pm2.jLabel5.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.green));
        }
        if(apron_international[5]!=0)
        {
            pm2.jLabel6.setForeground(java.awt.Color.red);
            pm2.jLabel6.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.red));
        }
        else
        {
            pm2.jLabel6.setForeground(java.awt.Color.green);
            pm2.jLabel6.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.green));
        }
        if(apron_international[6]!=0)
        {
            pm2.jLabel7.setForeground(java.awt.Color.red);
            pm2.jLabel7.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.red));
        }
        else
        {
            pm2.jLabel7.setForeground(java.awt.Color.green);
            pm2.jLabel7.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.green));
        }
        if(apron_international[7]!=0)
        {
            pm2.jLabel8.setForeground(java.awt.Color.red);
            pm2.jLabel8.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.red));
        }
        else
        {
            pm2.jLabel8.setForeground(java.awt.Color.green);
            pm2.jLabel8.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.green));
        }
        if(apron_international[8]!=0)
        {
            pm2.jLabel9.setForeground(java.awt.Color.red);
            pm2.jLabel9.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.red));
        }
        else
        {
            pm2.jLabel9.setForeground(java.awt.Color.green);
            pm2.jLabel9.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.green));
        }
        if(apron_international[9]!=0)
        {
            pm2.jLabel10.setForeground(java.awt.Color.red);
            pm2.jLabel10.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.red));
        }
        else
        {
            pm2.jLabel10.setForeground(java.awt.Color.green);
            pm2.jLabel10.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.green));
        }
        if(apron_international[10]!=0)
        {
            pm2.jLabel11.setForeground(java.awt.Color.red);
            pm2.jLabel11.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.red));
        }
        else
        {
            pm2.jLabel11.setForeground(java.awt.Color.green);
            pm2.jLabel11.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.green));
        }
        if(apron_international[11]!=0)
        {
            pm2.jLabel12.setForeground(java.awt.Color.red);
            pm2.jLabel12.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.red));
        }
        else
        {
            pm2.jLabel12.setForeground(java.awt.Color.green);
            pm2.jLabel12.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.green));
        }
        if(apron_international[12]!=0)
        {
            pm2.jLabel13.setForeground(java.awt.Color.red);
            pm2.jLabel13.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.red));
        }
        else
        {
            pm2.jLabel13.setForeground(java.awt.Color.green);
            pm2.jLabel13.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.green));
        }
        if(apron_international[13]!=0)
        {
            pm2.jLabel14.setForeground(java.awt.Color.red);
            pm2.jLabel14.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.red));
        }
        else
        {
            pm2.jLabel14.setForeground(java.awt.Color.green);
            pm2.jLabel14.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.green));
        }
        if(apron_international[14]!=0)
        {
            pm2.jLabel15.setForeground(java.awt.Color.red);
            pm2.jLabel15.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.red));
        }
        else
        {
            pm2.jLabel15.setForeground(java.awt.Color.green);
            pm2.jLabel15.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.green));
        }
        if(apron_international[15]!=0)
        {
            pm2.jLabel16.setForeground(java.awt.Color.red);
            pm2.jLabel16.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.red));
        }
        else
        {
            pm2.jLabel16.setForeground(java.awt.Color.green);
            pm2.jLabel16.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.green));
        }
        if(apron_international[16]!=0)
        {
            pm2.jLabel17.setForeground(java.awt.Color.red);
            pm2.jLabel17.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.red));
        }
        else
        {
            pm2.jLabel17.setForeground(java.awt.Color.green);
            pm2.jLabel17.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.green));
        }
        if(apron_international[17]!=0)
        {
            pm2.jLabel18.setForeground(java.awt.Color.red);
            pm2.jLabel18.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.red));
        }
        else
        {
            pm2.jLabel18.setForeground(java.awt.Color.green);
            pm2.jLabel18.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.green));
        }
        if(apron_international[18]!=0)
        {
            pm2.jLabel19.setForeground(java.awt.Color.red);
            pm2.jLabel19.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.red));
        }
        else
        {
            pm2.jLabel19.setForeground(java.awt.Color.green);
            pm2.jLabel19.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.green));
        }
        if(apron_international[19]!=0)
        {
            pm2.jLabel20.setForeground(java.awt.Color.red);
            pm2.jLabel20.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.red));
        }
        else
        {
            pm2.jLabel20.setForeground(java.awt.Color.green);
            pm2.jLabel20.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.green));
        }
        
        if(apron_international[20]!=0)
        {
            pm2.jLabel21.setForeground(java.awt.Color.red);
            pm2.jLabel21.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.red));
        }
        else
        {
            pm2.jLabel21.setForeground(java.awt.Color.green);
            pm2.jLabel21.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.green));
        }
        if(apron_international[21]!=0)
        {
            pm2.jLabel22.setForeground(java.awt.Color.red);
            pm2.jLabel22.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.red));
        }
        else
        {
            pm2.jLabel22.setForeground(java.awt.Color.green);
            pm2.jLabel22.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.green));
        }
        if(apron_international[22]!=0)
        {
            pm2.jLabel23.setForeground(java.awt.Color.red);
            pm2.jLabel23.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.red));
        }
        else
        {
            pm2.jLabel23.setForeground(java.awt.Color.green);
            pm2.jLabel23.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.green));
        }
        if(apron_international[23]!=0)
        {
            pm2.jLabel24.setForeground(java.awt.Color.red);
            pm2.jLabel24.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.red));
        }
        else
        {
            pm2.jLabel24.setForeground(java.awt.Color.green);
            pm2.jLabel24.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.green));
        }
        if(apron_international[24]!=0)
        {
            pm2.jLabel25.setForeground(java.awt.Color.red);
            pm2.jLabel25.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.red));
        }
        else
        {
            pm2.jLabel25.setForeground(java.awt.Color.green);
            pm2.jLabel25.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.green));
        }
        if(apron_international[25]!=0)
        {
            pm2.jLabel26.setForeground(java.awt.Color.red);
            pm2.jLabel26.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.red));
        }
        else
        {
            pm2.jLabel26.setForeground(java.awt.Color.green);
            pm2.jLabel26.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.green));
        }
        if(apron_international[26]!=0)
        {
            pm2.jLabel27.setForeground(java.awt.Color.red);
            pm2.jLabel27.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.red));
        }
        else
        {
            pm2.jLabel27.setForeground(java.awt.Color.green);
            pm2.jLabel27.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.green));
        }
        if(apron_international[27]!=0)
        {
            pm2.jLabel28.setForeground(java.awt.Color.red);
            pm2.jLabel28.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.red));
        }
        else
        {
            pm2.jLabel28.setForeground(java.awt.Color.green);
            pm2.jLabel28.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.green));
        }
        if(apron_international[28]!=0)
        {
            pm2.jLabel29.setForeground(java.awt.Color.red);
            pm2.jLabel29.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.red));
        }
        else
        {
            pm2.jLabel29.setForeground(java.awt.Color.green);
            pm2.jLabel29.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.green));
        }
        if(apron_international[29]!=0)
        {
            pm2.jLabel30.setForeground(java.awt.Color.red);
            pm2.jLabel30.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.red));
        }
        else
        {
            pm2.jLabel30.setForeground(java.awt.Color.green);
            pm2.jLabel30.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.green));
        }
        if(apron_international[30]!=0)
        {
            pm2.jLabel31.setForeground(java.awt.Color.red);
            pm2.jLabel31.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.red));
        }
        else
        {
            pm2.jLabel31.setForeground(java.awt.Color.green);
            pm2.jLabel31.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.green));
        }
        if(apron_international[31]!=0)
        {
            pm2.jLabel32.setForeground(java.awt.Color.red);
            pm2.jLabel32.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.red));
        }
        else
        {
            pm2.jLabel32.setForeground(java.awt.Color.green);
            pm2.jLabel32.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.green));
        }
        if(apron_international[32]!=0)
        {
            pm2.jLabel33.setForeground(java.awt.Color.red);
            pm2.jLabel33.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.red));
        }
        else
        {
            pm2.jLabel33.setForeground(java.awt.Color.green);
            pm2.jLabel33.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.green));
        }
        if(apron_international[33]!=0)
        {
            pm2.jLabel34.setForeground(java.awt.Color.red);
            pm2.jLabel34.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.red));
        }
        else
        {
            pm2.jLabel34.setForeground(java.awt.Color.green);
            pm2.jLabel34.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.green));
        }
        if(apron_international[34]!=0)
        {
            pm2.jLabel35.setForeground(java.awt.Color.red);
            pm2.jLabel35.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.red));
        }
        else
        {
            pm2.jLabel35.setForeground(java.awt.Color.green);
            pm2.jLabel35.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.green));
        }
        if(apron_international[35]!=0)
        {
            pm2.jLabel36.setForeground(java.awt.Color.red);
            pm2.jLabel36.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.red));
        }
        else
        {
            pm2.jLabel36.setForeground(java.awt.Color.green);
            pm2.jLabel36.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.green));
        }
        if(apron_international[36]!=0)
        {
            pm2.jLabel37.setForeground(java.awt.Color.red);
            pm2.jLabel37.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.red));
        }
        else
        {
            pm2.jLabel37.setForeground(java.awt.Color.green);
            pm2.jLabel37.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.green));
        }
        if(apron_international[37]!=0)
        {
            pm2.jLabel38.setForeground(java.awt.Color.red);
            pm2.jLabel38.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.red));
        }
        else
        {
            pm2.jLabel38.setForeground(java.awt.Color.green);
            pm2.jLabel38.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.green));
        }
        if(apron_international[38]!=0)
        {
            pm2.jLabel39.setForeground(java.awt.Color.red);
            pm2.jLabel39.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.red));
        }
        else
        {
            pm2.jLabel39.setForeground(java.awt.Color.green);
            pm2.jLabel39.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.green));
        }
        if(apron_international[39]!=0)
        {
            pm2.jLabel40.setForeground(java.awt.Color.red);
            pm2.jLabel40.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.red));
        }
        else
        {
            pm2.jLabel40.setForeground(java.awt.Color.green);
            pm2.jLabel40.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.green));
        }
        
        pm2.jLabel1.setText(" "+String.valueOf(apron_international[0])+" ");
        pm2.jLabel2.setText(" "+String.valueOf(apron_international[1])+" ");
        pm2.jLabel3.setText(" "+String.valueOf(apron_international[2])+" ");
        pm2.jLabel4.setText(" "+String.valueOf(apron_international[3])+" ");
        pm2.jLabel5.setText(" "+String.valueOf(apron_international[4])+" ");
        pm2.jLabel6.setText(" "+String.valueOf(apron_international[5])+" ");
        pm2.jLabel7.setText(" "+String.valueOf(apron_international[6])+" ");
        pm2.jLabel8.setText(" "+String.valueOf(apron_international[7])+" ");
        pm2.jLabel9.setText(" "+String.valueOf(apron_international[8])+" ");
        pm2.jLabel10.setText(" "+String.valueOf(apron_international[9])+" ");
        pm2.jLabel11.setText(" "+String.valueOf(apron_international[10])+" ");
        pm2.jLabel12.setText(" "+String.valueOf(apron_international[11])+" ");
        pm2.jLabel13.setText(" "+String.valueOf(apron_international[12])+" ");
        pm2.jLabel14.setText(" "+String.valueOf(apron_international[13])+" ");
        pm2.jLabel15.setText(" "+String.valueOf(apron_international[14])+" ");
        pm2.jLabel16.setText(" "+String.valueOf(apron_international[15])+" ");
        pm2.jLabel17.setText(" "+String.valueOf(apron_international[16])+" ");
        pm2.jLabel18.setText(" "+String.valueOf(apron_international[17])+" ");
        pm2.jLabel19.setText(" "+String.valueOf(apron_international[18])+" ");
        pm2.jLabel20.setText(" "+String.valueOf(apron_international[19])+" ");
        pm2.jLabel21.setText(" "+String.valueOf(apron_international[20])+" ");
        pm2.jLabel22.setText(" "+String.valueOf(apron_international[21])+" ");
        pm2.jLabel23.setText(" "+String.valueOf(apron_international[22])+" ");
        pm2.jLabel24.setText(" "+String.valueOf(apron_international[23])+" ");
        pm2.jLabel25.setText(" "+String.valueOf(apron_international[24])+" ");
        pm2.jLabel26.setText(" "+String.valueOf(apron_international[25])+" ");
        pm2.jLabel27.setText(" "+String.valueOf(apron_international[26])+" ");
        pm2.jLabel28.setText(" "+String.valueOf(apron_international[27])+" ");
        pm2.jLabel29.setText(" "+String.valueOf(apron_international[28])+" ");
        pm2.jLabel30.setText(" "+String.valueOf(apron_international[29])+" ");
        pm2.jLabel31.setText(" "+String.valueOf(apron_international[30])+" ");
        pm2.jLabel32.setText(" "+String.valueOf(apron_international[31])+" ");
        pm2.jLabel33.setText(" "+String.valueOf(apron_international[32])+" ");
        pm2.jLabel34.setText(" "+String.valueOf(apron_international[33])+" ");
        pm2.jLabel35.setText(" "+String.valueOf(apron_international[34])+" ");
        pm2.jLabel36.setText(" "+String.valueOf(apron_international[35])+" ");
        pm2.jLabel37.setText(" "+String.valueOf(apron_international[36])+" ");
        pm2.jLabel38.setText(" "+String.valueOf(apron_international[37])+" ");
        pm2.jLabel39.setText(" "+String.valueOf(apron_international[38])+" ");
        pm2.jLabel40.setText(" "+String.valueOf(apron_international[39])+" ");
        
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // TODO add your handling code here:
        
        pm3.setVisible(true);
        
        if(apron_cargo[0]!=0)
        {
            pm3.jLabel1.setForeground(java.awt.Color.red);
            pm3.jLabel1.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.red));
        }
        else
        {
            pm3.jLabel1.setForeground(java.awt.Color.green);
            pm3.jLabel1.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.green));
        }
        if(apron_cargo[1]!=0)
        {
            pm3.jLabel2.setForeground(java.awt.Color.red);
            pm3.jLabel2.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.red));
        }
        else
        {
            pm3.jLabel2.setForeground(java.awt.Color.green);
            pm3.jLabel2.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.green));
        }
        if(apron_cargo[2]!=0)
        {
            pm3.jLabel3.setForeground(java.awt.Color.red);
            pm3.jLabel3.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.red));
        }
        else
        {
            pm3.jLabel3.setForeground(java.awt.Color.green);
            pm3.jLabel3.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.green));
        }
        if(apron_cargo[3]!=0)
        {
            pm3.jLabel4.setForeground(java.awt.Color.red);
            pm3.jLabel4.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.red));
        }
        else
        {
            pm3.jLabel4.setForeground(java.awt.Color.green);
            pm3.jLabel4.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.green));
        }
        if(apron_cargo[4]!=0)
        {
            pm3.jLabel5.setForeground(java.awt.Color.red);
            pm3.jLabel5.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.red));
        }
        else
        {
            pm3.jLabel5.setForeground(java.awt.Color.green);
            pm3.jLabel5.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.green));
        }
        if(apron_cargo[5]!=0)
        {
            pm3.jLabel6.setForeground(java.awt.Color.red);
            pm3.jLabel6.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.red));
        }
        else
        {
            pm3.jLabel6.setForeground(java.awt.Color.green);
            pm3.jLabel6.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.green));
        }
        if(apron_cargo[6]!=0)
        {
            pm3.jLabel7.setForeground(java.awt.Color.red);
            pm3.jLabel7.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.red));
        }
        else
        {
            pm3.jLabel7.setForeground(java.awt.Color.green);
            pm3.jLabel7.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.green));
        }
        if(apron_cargo[7]!=0)
        {
            pm3.jLabel8.setForeground(java.awt.Color.red);
            pm3.jLabel8.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.red));
        }
        else
        {
            pm3.jLabel8.setForeground(java.awt.Color.green);
            pm3.jLabel8.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.green));
        }
        if(apron_cargo[8]!=0)
        {
            pm3.jLabel9.setForeground(java.awt.Color.red);
            pm3.jLabel9.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.red));
        }
        else
        {
            pm3.jLabel9.setForeground(java.awt.Color.green);
            pm3.jLabel9.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.green));
        }
        if(apron_cargo[9]!=0)
        {
            pm3.jLabel10.setForeground(java.awt.Color.red);
            pm3.jLabel10.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.red));
        }
        else
        {
            pm3.jLabel10.setForeground(java.awt.Color.green);
            pm3.jLabel10.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.green));
        }
        if(apron_cargo[10]!=0)
        {
            pm3.jLabel11.setForeground(java.awt.Color.red);
            pm3.jLabel11.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.red));
        }
        else
        {
            pm3.jLabel11.setForeground(java.awt.Color.green);
            pm3.jLabel11.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.green));
        }
        if(apron_cargo[11]!=0)
        {
            pm3.jLabel12.setForeground(java.awt.Color.red);
            pm3.jLabel12.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.red));
        }
        else
        {
            pm3.jLabel12.setForeground(java.awt.Color.green);
            pm3.jLabel12.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.green));
        }
        if(apron_cargo[12]!=0)
        {
            pm3.jLabel13.setForeground(java.awt.Color.red);
            pm3.jLabel13.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.red));
        }
        else
        {
            pm3.jLabel13.setForeground(java.awt.Color.green);
            pm3.jLabel13.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.green));
        }
        if(apron_cargo[13]!=0)
        {
            pm3.jLabel14.setForeground(java.awt.Color.red);
            pm3.jLabel14.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.red));
        }
        else
        {
            pm3.jLabel14.setForeground(java.awt.Color.green);
            pm3.jLabel14.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.green));
        }
        if(apron_cargo[14]!=0)
        {
            pm3.jLabel15.setForeground(java.awt.Color.red);
            pm3.jLabel15.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.red));
        }
        else
        {
            pm3.jLabel15.setForeground(java.awt.Color.green);
            pm3.jLabel15.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.green));
        }
        if(apron_cargo[15]!=0)
        {
            pm3.jLabel16.setForeground(java.awt.Color.red);
            pm3.jLabel16.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.red));
        }
        else
        {
            pm3.jLabel16.setForeground(java.awt.Color.green);
            pm3.jLabel16.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.green));
        }
        if(apron_cargo[16]!=0)
        {
            pm3.jLabel17.setForeground(java.awt.Color.red);
            pm3.jLabel17.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.red));
        }
        else
        {
            pm3.jLabel17.setForeground(java.awt.Color.green);
            pm3.jLabel17.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.green));
        }
        if(apron_cargo[17]!=0)
        {
            pm3.jLabel18.setForeground(java.awt.Color.red);
            pm3.jLabel18.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.red));
        }
        else
        {
            pm3.jLabel18.setForeground(java.awt.Color.green);
            pm3.jLabel18.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.green));
        }
        if(apron_cargo[18]!=0)
        {
            pm3.jLabel19.setForeground(java.awt.Color.red);
            pm3.jLabel19.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.red));
        }
        else
        {
            pm3.jLabel19.setForeground(java.awt.Color.green);
            pm3.jLabel19.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.green));
        }
        if(apron_cargo[19]!=0)
        {
            pm3.jLabel20.setForeground(java.awt.Color.red);
            pm3.jLabel20.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.red));
        }
        else
        {
            pm3.jLabel20.setForeground(java.awt.Color.green);
            pm3.jLabel20.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.green));
        }
        
        if(apron_cargo[20]!=0)
        {
            pm3.jLabel21.setForeground(java.awt.Color.red);
            pm3.jLabel21.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.red));
        }
        else
        {
            pm3.jLabel21.setForeground(java.awt.Color.green);
            pm3.jLabel21.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.green));
        }
        if(apron_cargo[21]!=0)
        {
            pm3.jLabel22.setForeground(java.awt.Color.red);
            pm3.jLabel22.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.red));
        }
        else
        {
            pm3.jLabel22.setForeground(java.awt.Color.green);
            pm3.jLabel22.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.green));
        }
        if(apron_cargo[22]!=0)
        {
            pm3.jLabel23.setForeground(java.awt.Color.red);
            pm3.jLabel23.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.red));
        }
        else
        {
            pm3.jLabel23.setForeground(java.awt.Color.green);
            pm3.jLabel23.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.green));
        }
        if(apron_cargo[23]!=0)
        {
            pm3.jLabel24.setForeground(java.awt.Color.red);
            pm3.jLabel24.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.red));
        }
        else
        {
            pm3.jLabel24.setForeground(java.awt.Color.green);
            pm3.jLabel24.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.green));
        }
        if(apron_cargo[24]!=0)
        {
            pm3.jLabel25.setForeground(java.awt.Color.red);
            pm3.jLabel25.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.red));
        }
        else
        {
            pm3.jLabel25.setForeground(java.awt.Color.green);
            pm3.jLabel25.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.green));
        }
        if(apron_cargo[25]!=0)
        {
            pm3.jLabel26.setForeground(java.awt.Color.red);
            pm3.jLabel26.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.red));
        }
        else
        {
            pm3.jLabel26.setForeground(java.awt.Color.green);
            pm3.jLabel26.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.green));
        }
        if(apron_cargo[26]!=0)
        {
            pm3.jLabel27.setForeground(java.awt.Color.red);
            pm3.jLabel27.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.red));
        }
        else
        {
            pm3.jLabel27.setForeground(java.awt.Color.green);
            pm3.jLabel27.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.green));
        }
        if(apron_cargo[27]!=0)
        {
            pm3.jLabel28.setForeground(java.awt.Color.red);
            pm3.jLabel28.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.red));
        }
        else
        {
            pm3.jLabel28.setForeground(java.awt.Color.green);
            pm3.jLabel28.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.green));
        }
        if(apron_cargo[28]!=0)
        {
            pm3.jLabel29.setForeground(java.awt.Color.red);
            pm3.jLabel29.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.red));
        }
        else
        {
            pm3.jLabel29.setForeground(java.awt.Color.green);
            pm3.jLabel29.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.green));
        }
        if(apron_cargo[29]!=0)
        {
            pm3.jLabel30.setForeground(java.awt.Color.red);
            pm3.jLabel30.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.red));
        }
        else
        {
            pm3.jLabel30.setForeground(java.awt.Color.green);
            pm3.jLabel30.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.green));
        }
        if(apron_cargo[30]!=0)
        {
            pm3.jLabel31.setForeground(java.awt.Color.red);
            pm3.jLabel31.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.red));
        }
        else
        {
            pm3.jLabel31.setForeground(java.awt.Color.green);
            pm3.jLabel31.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.green));
        }
        if(apron_cargo[31]!=0)
        {
            pm3.jLabel32.setForeground(java.awt.Color.red);
            pm3.jLabel32.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.red));
        }
        else
        {
            pm3.jLabel32.setForeground(java.awt.Color.green);
            pm3.jLabel32.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.green));
        }
        if(apron_cargo[32]!=0)
        {
            pm3.jLabel33.setForeground(java.awt.Color.red);
            pm3.jLabel33.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.red));
        }
        else
        {
            pm3.jLabel33.setForeground(java.awt.Color.green);
            pm3.jLabel33.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.green));
        }
        if(apron_cargo[33]!=0)
        {
            pm3.jLabel34.setForeground(java.awt.Color.red);
            pm3.jLabel34.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.red));
        }
        else
        {
            pm3.jLabel34.setForeground(java.awt.Color.green);
            pm3.jLabel34.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.green));
        }
        if(apron_cargo[34]!=0)
        {
            pm3.jLabel35.setForeground(java.awt.Color.red);
            pm3.jLabel35.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.red));
        }
        else
        {
            pm3.jLabel35.setForeground(java.awt.Color.green);
            pm3.jLabel35.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.green));
        }
        if(apron_cargo[35]!=0)
        {
            pm3.jLabel36.setForeground(java.awt.Color.red);
            pm3.jLabel36.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.red));
        }
        else
        {
            pm3.jLabel36.setForeground(java.awt.Color.green);
            pm3.jLabel36.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.green));
        }
        if(apron_cargo[36]!=0)
        {
            pm3.jLabel37.setForeground(java.awt.Color.red);
            pm3.jLabel37.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.red));
        }
        else
        {
            pm3.jLabel37.setForeground(java.awt.Color.green);
            pm3.jLabel37.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.green));
        }
        if(apron_cargo[37]!=0)
        {
            pm3.jLabel38.setForeground(java.awt.Color.red);
            pm3.jLabel38.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.red));
        }
        else
        {
            pm3.jLabel38.setForeground(java.awt.Color.green);
            pm3.jLabel38.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.green));
        }
        if(apron_cargo[38]!=0)
        {
            pm3.jLabel39.setForeground(java.awt.Color.red);
            pm3.jLabel39.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.red));
        }
        else
        {
            pm3.jLabel39.setForeground(java.awt.Color.green);
            pm3.jLabel39.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.green));
        }
        if(apron_cargo[39]!=0)
        {
            pm3.jLabel40.setForeground(java.awt.Color.red);
            pm3.jLabel40.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.red));
        }
        else
        {
            pm3.jLabel40.setForeground(java.awt.Color.green);
            pm3.jLabel40.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.green));
        }
        
        pm3.jLabel1.setText(" "+String.valueOf(apron_cargo[0])+" ");
        pm3.jLabel2.setText(" "+String.valueOf(apron_cargo[1])+" ");
        pm3.jLabel3.setText(" "+String.valueOf(apron_cargo[2])+" ");
        pm3.jLabel4.setText(" "+String.valueOf(apron_cargo[3])+" ");
        pm3.jLabel5.setText(" "+String.valueOf(apron_cargo[4])+" ");
        pm3.jLabel6.setText(" "+String.valueOf(apron_cargo[5])+" ");
        pm3.jLabel7.setText(" "+String.valueOf(apron_cargo[6])+" ");
        pm3.jLabel8.setText(" "+String.valueOf(apron_cargo[7])+" ");
        pm3.jLabel9.setText(" "+String.valueOf(apron_cargo[8])+" ");
        pm3.jLabel10.setText(" "+String.valueOf(apron_cargo[9])+" ");
        pm3.jLabel11.setText(" "+String.valueOf(apron_cargo[10])+" ");
        pm3.jLabel12.setText(" "+String.valueOf(apron_cargo[11])+" ");
        pm3.jLabel13.setText(" "+String.valueOf(apron_cargo[12])+" ");
        pm3.jLabel14.setText(" "+String.valueOf(apron_cargo[13])+" ");
        pm3.jLabel15.setText(" "+String.valueOf(apron_cargo[14])+" ");
        pm3.jLabel16.setText(" "+String.valueOf(apron_cargo[15])+" ");
        pm3.jLabel17.setText(" "+String.valueOf(apron_cargo[16])+" ");
        pm3.jLabel18.setText(" "+String.valueOf(apron_cargo[17])+" ");
        pm3.jLabel19.setText(" "+String.valueOf(apron_cargo[18])+" ");
        pm3.jLabel20.setText(" "+String.valueOf(apron_cargo[19])+" ");
        pm3.jLabel21.setText(" "+String.valueOf(apron_cargo[20])+" ");
        pm3.jLabel22.setText(" "+String.valueOf(apron_cargo[21])+" ");
        pm3.jLabel23.setText(" "+String.valueOf(apron_cargo[22])+" ");
        pm3.jLabel24.setText(" "+String.valueOf(apron_cargo[23])+" ");
        pm3.jLabel25.setText(" "+String.valueOf(apron_cargo[24])+" ");
        pm3.jLabel26.setText(" "+String.valueOf(apron_cargo[25])+" ");
        pm3.jLabel27.setText(" "+String.valueOf(apron_cargo[26])+" ");
        pm3.jLabel28.setText(" "+String.valueOf(apron_cargo[27])+" ");
        pm3.jLabel29.setText(" "+String.valueOf(apron_cargo[28])+" ");
        pm3.jLabel30.setText(" "+String.valueOf(apron_cargo[29])+" ");
        pm3.jLabel31.setText(" "+String.valueOf(apron_cargo[30])+" ");
        pm3.jLabel32.setText(" "+String.valueOf(apron_cargo[31])+" ");
        pm3.jLabel33.setText(" "+String.valueOf(apron_cargo[32])+" ");
        pm3.jLabel34.setText(" "+String.valueOf(apron_cargo[33])+" ");
        pm3.jLabel35.setText(" "+String.valueOf(apron_cargo[34])+" ");
        pm3.jLabel36.setText(" "+String.valueOf(apron_cargo[35])+" ");
        pm3.jLabel37.setText(" "+String.valueOf(apron_cargo[36])+" ");
        pm3.jLabel38.setText(" "+String.valueOf(apron_cargo[37])+" ");
        pm3.jLabel39.setText(" "+String.valueOf(apron_cargo[38])+" ");
        pm3.jLabel40.setText(" "+String.valueOf(apron_cargo[39])+" ");
        
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jComboBox2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox2ActionPerformed

    
    
    private void jComboBox4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox4ActionPerformed
        // TODO add your handling code here:
        int cnt=0;
        
        try
        {
            rs.first();
            do
            {
                cnt++;
            }
            while(rs.next());
        }
        catch(SQLException ee)
        {
            JOptionPane.showMessageDialog(EntryPage.this, ee.getMessage());
        }
        
        try
        {
            rs.first();
            String nme=jComboBox4.getSelectedItem().toString();
            for(int a=0;a<cnt;a++)
            {
                if(rs.getString("Name").equals(nme))
                {
                    size=rs.getInt("Size");
                    type=rs.getString("Type");
                    break;
                }
                else
                    rs.next();
            }
            jLabel11.setText(nme);
            jLabel12.setText("Size:"+String.valueOf(size));
            jLabel13.setText("Type:"+type);
            
        }
        catch(SQLException ee)
        {
            JOptionPane.showMessageDialog(EntryPage.this, ee.getMessage());
        }
        
        
        
    }//GEN-LAST:event_jComboBox4ActionPerformed
            
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        
        for(int a=0;a<40;a++)//By Rish
        {
            apron_domestic[a]=0;
            apron_international[a]=0;
            apron_cargo[a]=0;
        }
        
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(EntryPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(EntryPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(EntryPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(EntryPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new EntryPage().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JComboBox jComboBox2;
    public javax.swing.JComboBox jComboBox4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JRadioButton jRadioButton1;
    private javax.swing.JRadioButton jRadioButton2;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables

    private void setText(String apron_cargoa1) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }
}