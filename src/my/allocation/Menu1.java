/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package my.allocation;

import static my.allocation.EntryPage.apron_domestic;
import static my.allocation.EntryPage.apron_international;
import static my.allocation.EntryPage.apron_cargo;
import static my.allocation.EntryPage.pm1;
import static my.allocation.EntryPage.pm2;
import static my.allocation.EntryPage.pm3;

/**
 *
 * @author Windows-8 (x64)
 */
public class Menu1 extends javax.swing.JFrame {

    /**
     * Creates new form Menu
     */
    public Menu1() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new java.awt.GridBagLayout());

        jPanel2.setOpaque(false);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setText("Menu");
        jLabel1.setOpaque(true);

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel3.setText("View Apron Status:");
        jLabel3.setOpaque(true);

        jButton2.setText("Domestic Passenger Apron");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("International Passenger Apron");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setText("Cargo Apron");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton5.setText("Logout");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Hello USER");

        jLabel7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/my/allocation/image/menu1.jpg"))); // NOI18N

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel4.setText("Contact ADMIN:");
        jLabel4.setOpaque(true);

        jButton1.setText("Send ADMIN a Message");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(90, 90, 90)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, 188, Short.MAX_VALUE)
                        .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 68, Short.MAX_VALUE)
                .addComponent(jLabel7)
                .addGap(53, 53, 53))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(235, 235, 235)
                .addComponent(jLabel2)
                .addGap(30, 30, 30))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(156, 156, 156)
                        .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 340, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(jLabel3))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(96, 96, 96)
                        .addComponent(jLabel3)
                        .addGap(36, 36, 36)
                        .addComponent(jButton2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 37, Short.MAX_VALUE)
                        .addComponent(jLabel4)
                        .addGap(28, 28, 28)
                        .addComponent(jButton1))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(27, 27, 27)
                                .addComponent(jLabel1))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(19, 19, 19)
                                .addComponent(jLabel2)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel7)))
                .addGap(41, 41, 41)
                .addComponent(jButton5)
                .addGap(34, 34, 34))
        );

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        getContentPane().add(jPanel2, gridBagConstraints);

        jLabel6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/my/allocation/image/image1.jpg"))); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        getContentPane().add(jLabel6, gridBagConstraints);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
        
        this.setVisible(false);
        Home h=new Home();
        h.setVisible(true);
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        
        pm1.setVisible(true);
        
        if(apron_domestic[0]!=0)
        {
            pm1.jLabel1.setForeground(java.awt.Color.red);
            pm1.jLabel1.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.red));
        }
        else
        {
            pm1.jLabel1.setForeground(java.awt.Color.green);
            pm1.jLabel1.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.green));
        }
        if(apron_domestic[1]!=0)
        {
            pm1.jLabel2.setForeground(java.awt.Color.red);
            pm1.jLabel2.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.red));
        }
        else
        {
            pm1.jLabel2.setForeground(java.awt.Color.green);
            pm1.jLabel2.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.green));
        }
        if(apron_domestic[2]!=0)
        {
            pm1.jLabel3.setForeground(java.awt.Color.red);
            pm1.jLabel3.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.red));
        }
        else
        {
            pm1.jLabel3.setForeground(java.awt.Color.green);
            pm1.jLabel3.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.green));
        }
        if(apron_domestic[3]!=0)
        {
            pm1.jLabel4.setForeground(java.awt.Color.red);
            pm1.jLabel4.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.red));
        }
        else
        {
            pm1.jLabel4.setForeground(java.awt.Color.green);
            pm1.jLabel4.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.green));
        }
        if(apron_domestic[4]!=0)
        {
            pm1.jLabel5.setForeground(java.awt.Color.red);
            pm1.jLabel5.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.red));
        }
        else
        {
            pm1.jLabel5.setForeground(java.awt.Color.green);
            pm1.jLabel5.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.green));
        }
        if(apron_domestic[5]!=0)
        {
            pm1.jLabel6.setForeground(java.awt.Color.red);
            pm1.jLabel6.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.red));
        }
        else
        {
            pm1.jLabel6.setForeground(java.awt.Color.green);
            pm1.jLabel6.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.green));
        }
        if(apron_domestic[6]!=0)
        {
            pm1.jLabel7.setForeground(java.awt.Color.red);
            pm1.jLabel7.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.red));
        }
        else
        {
            pm1.jLabel7.setForeground(java.awt.Color.green);
            pm1.jLabel7.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.green));
        }
        if(apron_domestic[7]!=0)
        {
            pm1.jLabel8.setForeground(java.awt.Color.red);
            pm1.jLabel8.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.red));
        }
        else
        {
            pm1.jLabel8.setForeground(java.awt.Color.green);
            pm1.jLabel8.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.green));
        }
        if(apron_domestic[8]!=0)
        {
            pm1.jLabel9.setForeground(java.awt.Color.red);
            pm1.jLabel9.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.red));
        }
        else
        {
            pm1.jLabel9.setForeground(java.awt.Color.green);
            pm1.jLabel9.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.green));
        }
        if(apron_domestic[9]!=0)
        {
            pm1.jLabel10.setForeground(java.awt.Color.red);
            pm1.jLabel10.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.red));
        }
        else
        {
            pm1.jLabel10.setForeground(java.awt.Color.green);
            pm1.jLabel10.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.green));
        }
        if(apron_domestic[10]!=0)
        {
            pm1.jLabel11.setForeground(java.awt.Color.red);
            pm1.jLabel11.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.red));
        }
        else
        {
            pm1.jLabel11.setForeground(java.awt.Color.green);
            pm1.jLabel11.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.green));
        }
        if(apron_domestic[11]!=0)
        {
            pm1.jLabel12.setForeground(java.awt.Color.red);
            pm1.jLabel12.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.red));
        }
        else
        {
            pm1.jLabel12.setForeground(java.awt.Color.green);
            pm1.jLabel12.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.green));
        }
        if(apron_domestic[12]!=0)
        {
            pm1.jLabel13.setForeground(java.awt.Color.red);
            pm1.jLabel13.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.red));
        }
        else
        {
            pm1.jLabel13.setForeground(java.awt.Color.green);
            pm1.jLabel13.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.green));
        }
        if(apron_domestic[13]!=0)
        {
            pm1.jLabel14.setForeground(java.awt.Color.red);
            pm1.jLabel14.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.red));
        }
        else
        {
            pm1.jLabel14.setForeground(java.awt.Color.green);
            pm1.jLabel14.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.green));
        }
        if(apron_domestic[14]!=0)
        {
            pm1.jLabel15.setForeground(java.awt.Color.red);
            pm1.jLabel15.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.red));
        }
        else
        {
            pm1.jLabel15.setForeground(java.awt.Color.green);
            pm1.jLabel15.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.green));
        }
        if(apron_domestic[15]!=0)
        {
            pm1.jLabel16.setForeground(java.awt.Color.red);
            pm1.jLabel16.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.red));
        }
        else
        {
            pm1.jLabel16.setForeground(java.awt.Color.green);
            pm1.jLabel16.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.green));
        }
        if(apron_domestic[16]!=0)
        {
            pm1.jLabel17.setForeground(java.awt.Color.red);
            pm1.jLabel17.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.red));
        }
        else
        {
            pm1.jLabel17.setForeground(java.awt.Color.green);
            pm1.jLabel17.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.green));
        }
        if(apron_domestic[17]!=0)
        {
            pm1.jLabel18.setForeground(java.awt.Color.red);
            pm1.jLabel18.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.red));
        }
        else
        {
            pm1.jLabel18.setForeground(java.awt.Color.green);
            pm1.jLabel18.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.green));
        }
        if(apron_domestic[18]!=0)
        {
            pm1.jLabel19.setForeground(java.awt.Color.red);
            pm1.jLabel19.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.red));
        }
        else
        {
            pm1.jLabel19.setForeground(java.awt.Color.green);
            pm1.jLabel19.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.green));
        }
        if(apron_domestic[19]!=0)
        {
            pm1.jLabel20.setForeground(java.awt.Color.red);
            pm1.jLabel20.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.red));
        }
        else
        {
            pm1.jLabel20.setForeground(java.awt.Color.green);
            pm1.jLabel20.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.green));
        }
        
        if(apron_domestic[20]!=0)
        {
            pm1.jLabel21.setForeground(java.awt.Color.red);
            pm1.jLabel21.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.red));
        }
        else
        {
            pm1.jLabel21.setForeground(java.awt.Color.green);
            pm1.jLabel21.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.green));
        }
        if(apron_domestic[21]!=0)
        {
            pm1.jLabel22.setForeground(java.awt.Color.red);
            pm1.jLabel22.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.red));
        }
        else
        {
            pm1.jLabel22.setForeground(java.awt.Color.green);
            pm1.jLabel22.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.green));
        }
        if(apron_domestic[22]!=0)
        {
            pm1.jLabel23.setForeground(java.awt.Color.red);
            pm1.jLabel23.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.red));
        }
        else
        {
            pm1.jLabel23.setForeground(java.awt.Color.green);
            pm1.jLabel23.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.green));
        }
        if(apron_domestic[23]!=0)
        {
            pm1.jLabel24.setForeground(java.awt.Color.red);
            pm1.jLabel24.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.red));
        }
        else
        {
            pm1.jLabel24.setForeground(java.awt.Color.green);
            pm1.jLabel24.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.green));
        }
        if(apron_domestic[24]!=0)
        {
            pm1.jLabel25.setForeground(java.awt.Color.red);
            pm1.jLabel25.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.red));
        }
        else
        {
            pm1.jLabel25.setForeground(java.awt.Color.green);
            pm1.jLabel25.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.green));
        }
        if(apron_domestic[25]!=0)
        {
            pm1.jLabel26.setForeground(java.awt.Color.red);
            pm1.jLabel26.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.red));
        }
        else
        {
            pm1.jLabel26.setForeground(java.awt.Color.green);
            pm1.jLabel26.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.green));
        }
        if(apron_domestic[26]!=0)
        {
            pm1.jLabel27.setForeground(java.awt.Color.red);
            pm1.jLabel27.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.red));
        }
        else
        {
            pm1.jLabel27.setForeground(java.awt.Color.green);
            pm1.jLabel27.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.green));
        }
        if(apron_domestic[27]!=0)
        {
            pm1.jLabel28.setForeground(java.awt.Color.red);
            pm1.jLabel28.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.red));
        }
        else
        {
            pm1.jLabel28.setForeground(java.awt.Color.green);
            pm1.jLabel28.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.green));
        }
        if(apron_domestic[28]!=0)
        {
            pm1.jLabel29.setForeground(java.awt.Color.red);
            pm1.jLabel29.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.red));
        }
        else
        {
            pm1.jLabel29.setForeground(java.awt.Color.green);
            pm1.jLabel29.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.green));
        }
        if(apron_domestic[29]!=0)
        {
            pm1.jLabel30.setForeground(java.awt.Color.red);
            pm1.jLabel30.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.red));
        }
        else
        {
            pm1.jLabel30.setForeground(java.awt.Color.green);
            pm1.jLabel30.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.green));
        }
        if(apron_domestic[30]!=0)
        {
            pm1.jLabel31.setForeground(java.awt.Color.red);
            pm1.jLabel31.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.red));
        }
        else
        {
            pm1.jLabel31.setForeground(java.awt.Color.green);
            pm1.jLabel31.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.green));
        }
        if(apron_domestic[31]!=0)
        {
            pm1.jLabel32.setForeground(java.awt.Color.red);
            pm1.jLabel32.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.red));
        }
        else
        {
            pm1.jLabel32.setForeground(java.awt.Color.green);
            pm1.jLabel32.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.green));
        }
        if(apron_domestic[32]!=0)
        {
            pm1.jLabel33.setForeground(java.awt.Color.red);
            pm1.jLabel33.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.red));
        }
        else
        {
            pm1.jLabel33.setForeground(java.awt.Color.green);
            pm1.jLabel33.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.green));
        }
        if(apron_domestic[33]!=0)
        {
            pm1.jLabel34.setForeground(java.awt.Color.red);
            pm1.jLabel34.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.red));
        }
        else
        {
            pm1.jLabel34.setForeground(java.awt.Color.green);
            pm1.jLabel34.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.green));
        }
        if(apron_domestic[34]!=0)
        {
            pm1.jLabel35.setForeground(java.awt.Color.red);
            pm1.jLabel35.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.red));
        }
        else
        {
            pm1.jLabel35.setForeground(java.awt.Color.green);
            pm1.jLabel35.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.green));
        }
        if(apron_domestic[35]!=0)
        {
            pm1.jLabel36.setForeground(java.awt.Color.red);
            pm1.jLabel36.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.red));
        }
        else
        {
            pm1.jLabel36.setForeground(java.awt.Color.green);
            pm1.jLabel36.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.green));
        }
        if(apron_domestic[36]!=0)
        {
            pm1.jLabel37.setForeground(java.awt.Color.red);
            pm1.jLabel37.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.red));
        }
        else
        {
            pm1.jLabel37.setForeground(java.awt.Color.green);
            pm1.jLabel37.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.green));
        }
        if(apron_domestic[37]!=0)
        {
            pm1.jLabel38.setForeground(java.awt.Color.red);
            pm1.jLabel38.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.red));
        }
        else
        {
            pm1.jLabel38.setForeground(java.awt.Color.green);
            pm1.jLabel38.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.green));
        }
        if(apron_domestic[38]!=0)
        {
            pm1.jLabel39.setForeground(java.awt.Color.red);
            pm1.jLabel39.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.red));
        }
        else
        {
            pm1.jLabel39.setForeground(java.awt.Color.green);
            pm1.jLabel39.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.green));
        }
        if(apron_domestic[39]!=0)
        {
            pm1.jLabel40.setForeground(java.awt.Color.red);
            pm1.jLabel40.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.red));
        }
        else
        {
            pm1.jLabel40.setForeground(java.awt.Color.green);
            pm1.jLabel40.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.green));
        }
        
        pm1.jLabel1.setText(" "+String.valueOf(apron_domestic[0])+" ");
        pm1.jLabel2.setText(" "+String.valueOf(apron_domestic[1])+" ");
        pm1.jLabel3.setText(" "+String.valueOf(apron_domestic[2])+" ");
        pm1.jLabel4.setText(" "+String.valueOf(apron_domestic[3])+" ");
        pm1.jLabel5.setText(" "+String.valueOf(apron_domestic[4])+" ");
        pm1.jLabel6.setText(" "+String.valueOf(apron_domestic[5])+" ");
        pm1.jLabel7.setText(" "+String.valueOf(apron_domestic[6])+" ");
        pm1.jLabel8.setText(" "+String.valueOf(apron_domestic[7])+" ");
        pm1.jLabel9.setText(" "+String.valueOf(apron_domestic[8])+" ");
        pm1.jLabel10.setText(" "+String.valueOf(apron_domestic[9])+" ");
        pm1.jLabel11.setText(" "+String.valueOf(apron_domestic[10])+" ");
        pm1.jLabel12.setText(" "+String.valueOf(apron_domestic[11])+" ");
        pm1.jLabel13.setText(" "+String.valueOf(apron_domestic[12])+" ");
        pm1.jLabel14.setText(" "+String.valueOf(apron_domestic[13])+" ");
        pm1.jLabel15.setText(" "+String.valueOf(apron_domestic[14])+" ");
        pm1.jLabel16.setText(" "+String.valueOf(apron_domestic[15])+" ");
        pm1.jLabel17.setText(" "+String.valueOf(apron_domestic[16])+" ");
        pm1.jLabel18.setText(" "+String.valueOf(apron_domestic[17])+" ");
        pm1.jLabel19.setText(" "+String.valueOf(apron_domestic[18])+" ");
        pm1.jLabel20.setText(" "+String.valueOf(apron_domestic[19])+" ");
        pm1.jLabel21.setText(" "+String.valueOf(apron_domestic[20])+" ");
        pm1.jLabel22.setText(" "+String.valueOf(apron_domestic[21])+" ");
        pm1.jLabel23.setText(" "+String.valueOf(apron_domestic[22])+" ");
        pm1.jLabel24.setText(" "+String.valueOf(apron_domestic[23])+" ");
        pm1.jLabel25.setText(" "+String.valueOf(apron_domestic[24])+" ");
        pm1.jLabel26.setText(" "+String.valueOf(apron_domestic[25])+" ");
        pm1.jLabel27.setText(" "+String.valueOf(apron_domestic[26])+" ");
        pm1.jLabel28.setText(" "+String.valueOf(apron_domestic[27])+" ");
        pm1.jLabel29.setText(" "+String.valueOf(apron_domestic[28])+" ");
        pm1.jLabel30.setText(" "+String.valueOf(apron_domestic[29])+" ");
        pm1.jLabel31.setText(" "+String.valueOf(apron_domestic[30])+" ");
        pm1.jLabel32.setText(" "+String.valueOf(apron_domestic[31])+" ");
        pm1.jLabel33.setText(" "+String.valueOf(apron_domestic[32])+" ");
        pm1.jLabel34.setText(" "+String.valueOf(apron_domestic[33])+" ");
        pm1.jLabel35.setText(" "+String.valueOf(apron_domestic[34])+" ");
        pm1.jLabel36.setText(" "+String.valueOf(apron_domestic[35])+" ");
        pm1.jLabel37.setText(" "+String.valueOf(apron_domestic[36])+" ");
        pm1.jLabel38.setText(" "+String.valueOf(apron_domestic[37])+" ");
        pm1.jLabel39.setText(" "+String.valueOf(apron_domestic[38])+" ");
        pm1.jLabel40.setText(" "+String.valueOf(apron_domestic[39])+" ");
         
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        
        pm2.setVisible(true);
        
        if(apron_international[0]!=0)
        {
            pm2.jLabel1.setForeground(java.awt.Color.red);
            pm2.jLabel1.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.red));
        }
        else
        {
            pm2.jLabel1.setForeground(java.awt.Color.green);
            pm2.jLabel1.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.green));
        }
        if(apron_international[1]!=0)
        {
            pm2.jLabel2.setForeground(java.awt.Color.red);
            pm2.jLabel2.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.red));
        }
        else
        {
            pm2.jLabel2.setForeground(java.awt.Color.green);
            pm2.jLabel2.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.green));
        }
        if(apron_international[2]!=0)
        {
            pm2.jLabel3.setForeground(java.awt.Color.red);
            pm2.jLabel3.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.red));
        }
        else
        {
            pm2.jLabel3.setForeground(java.awt.Color.green);
            pm2.jLabel3.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.green));
        }
        if(apron_international[3]!=0)
        {
            pm2.jLabel4.setForeground(java.awt.Color.red);
            pm2.jLabel4.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.red));
        }
        else
        {
            pm2.jLabel4.setForeground(java.awt.Color.green);
            pm2.jLabel4.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.green));
        }
        if(apron_international[4]!=0)
        {
            pm2.jLabel5.setForeground(java.awt.Color.red);
            pm2.jLabel5.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.red));
        }
        else
        {
            pm2.jLabel5.setForeground(java.awt.Color.green);
            pm2.jLabel5.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.green));
        }
        if(apron_international[5]!=0)
        {
            pm2.jLabel6.setForeground(java.awt.Color.red);
            pm2.jLabel6.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.red));
        }
        else
        {
            pm2.jLabel6.setForeground(java.awt.Color.green);
            pm2.jLabel6.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.green));
        }
        if(apron_international[6]!=0)
        {
            pm2.jLabel7.setForeground(java.awt.Color.red);
            pm2.jLabel7.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.red));
        }
        else
        {
            pm2.jLabel7.setForeground(java.awt.Color.green);
            pm2.jLabel7.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.green));
        }
        if(apron_international[7]!=0)
        {
            pm2.jLabel8.setForeground(java.awt.Color.red);
            pm2.jLabel8.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.red));
        }
        else
        {
            pm2.jLabel8.setForeground(java.awt.Color.green);
            pm2.jLabel8.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.green));
        }
        if(apron_international[8]!=0)
        {
            pm2.jLabel9.setForeground(java.awt.Color.red);
            pm2.jLabel9.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.red));
        }
        else
        {
            pm2.jLabel9.setForeground(java.awt.Color.green);
            pm2.jLabel9.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.green));
        }
        if(apron_international[9]!=0)
        {
            pm2.jLabel10.setForeground(java.awt.Color.red);
            pm2.jLabel10.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.red));
        }
        else
        {
            pm2.jLabel10.setForeground(java.awt.Color.green);
            pm2.jLabel10.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.green));
        }
        if(apron_international[10]!=0)
        {
            pm2.jLabel11.setForeground(java.awt.Color.red);
            pm2.jLabel11.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.red));
        }
        else
        {
            pm2.jLabel11.setForeground(java.awt.Color.green);
            pm2.jLabel11.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.green));
        }
        if(apron_international[11]!=0)
        {
            pm2.jLabel12.setForeground(java.awt.Color.red);
            pm2.jLabel12.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.red));
        }
        else
        {
            pm2.jLabel12.setForeground(java.awt.Color.green);
            pm2.jLabel12.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.green));
        }
        if(apron_international[12]!=0)
        {
            pm2.jLabel13.setForeground(java.awt.Color.red);
            pm2.jLabel13.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.red));
        }
        else
        {
            pm2.jLabel13.setForeground(java.awt.Color.green);
            pm2.jLabel13.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.green));
        }
        if(apron_international[13]!=0)
        {
            pm2.jLabel14.setForeground(java.awt.Color.red);
            pm2.jLabel14.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.red));
        }
        else
        {
            pm2.jLabel14.setForeground(java.awt.Color.green);
            pm2.jLabel14.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.green));
        }
        if(apron_international[14]!=0)
        {
            pm2.jLabel15.setForeground(java.awt.Color.red);
            pm2.jLabel15.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.red));
        }
        else
        {
            pm2.jLabel15.setForeground(java.awt.Color.green);
            pm2.jLabel15.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.green));
        }
        if(apron_international[15]!=0)
        {
            pm2.jLabel16.setForeground(java.awt.Color.red);
            pm2.jLabel16.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.red));
        }
        else
        {
            pm2.jLabel16.setForeground(java.awt.Color.green);
            pm2.jLabel16.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.green));
        }
        if(apron_international[16]!=0)
        {
            pm2.jLabel17.setForeground(java.awt.Color.red);
            pm2.jLabel17.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.red));
        }
        else
        {
            pm2.jLabel17.setForeground(java.awt.Color.green);
            pm2.jLabel17.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.green));
        }
        if(apron_international[17]!=0)
        {
            pm2.jLabel18.setForeground(java.awt.Color.red);
            pm2.jLabel18.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.red));
        }
        else
        {
            pm2.jLabel18.setForeground(java.awt.Color.green);
            pm2.jLabel18.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.green));
        }
        if(apron_international[18]!=0)
        {
            pm2.jLabel19.setForeground(java.awt.Color.red);
            pm2.jLabel19.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.red));
        }
        else
        {
            pm2.jLabel19.setForeground(java.awt.Color.green);
            pm2.jLabel19.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.green));
        }
        if(apron_international[19]!=0)
        {
            pm2.jLabel20.setForeground(java.awt.Color.red);
            pm2.jLabel20.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.red));
        }
        else
        {
            pm2.jLabel20.setForeground(java.awt.Color.green);
            pm2.jLabel20.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.green));
        }
        
        if(apron_international[20]!=0)
        {
            pm2.jLabel21.setForeground(java.awt.Color.red);
            pm2.jLabel21.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.red));
        }
        else
        {
            pm2.jLabel21.setForeground(java.awt.Color.green);
            pm2.jLabel21.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.green));
        }
        if(apron_international[21]!=0)
        {
            pm2.jLabel22.setForeground(java.awt.Color.red);
            pm2.jLabel22.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.red));
        }
        else
        {
            pm2.jLabel22.setForeground(java.awt.Color.green);
            pm2.jLabel22.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.green));
        }
        if(apron_international[22]!=0)
        {
            pm2.jLabel23.setForeground(java.awt.Color.red);
            pm2.jLabel23.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.red));
        }
        else
        {
            pm2.jLabel23.setForeground(java.awt.Color.green);
            pm2.jLabel23.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.green));
        }
        if(apron_international[23]!=0)
        {
            pm2.jLabel24.setForeground(java.awt.Color.red);
            pm2.jLabel24.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.red));
        }
        else
        {
            pm2.jLabel24.setForeground(java.awt.Color.green);
            pm2.jLabel24.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.green));
        }
        if(apron_international[24]!=0)
        {
            pm2.jLabel25.setForeground(java.awt.Color.red);
            pm2.jLabel25.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.red));
        }
        else
        {
            pm2.jLabel25.setForeground(java.awt.Color.green);
            pm2.jLabel25.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.green));
        }
        if(apron_international[25]!=0)
        {
            pm2.jLabel26.setForeground(java.awt.Color.red);
            pm2.jLabel26.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.red));
        }
        else
        {
            pm2.jLabel26.setForeground(java.awt.Color.green);
            pm2.jLabel26.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.green));
        }
        if(apron_international[26]!=0)
        {
            pm2.jLabel27.setForeground(java.awt.Color.red);
            pm2.jLabel27.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.red));
        }
        else
        {
            pm2.jLabel27.setForeground(java.awt.Color.green);
            pm2.jLabel27.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.green));
        }
        if(apron_international[27]!=0)
        {
            pm2.jLabel28.setForeground(java.awt.Color.red);
            pm2.jLabel28.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.red));
        }
        else
        {
            pm2.jLabel28.setForeground(java.awt.Color.green);
            pm2.jLabel28.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.green));
        }
        if(apron_international[28]!=0)
        {
            pm2.jLabel29.setForeground(java.awt.Color.red);
            pm2.jLabel29.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.red));
        }
        else
        {
            pm2.jLabel29.setForeground(java.awt.Color.green);
            pm2.jLabel29.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.green));
        }
        if(apron_international[29]!=0)
        {
            pm2.jLabel30.setForeground(java.awt.Color.red);
            pm2.jLabel30.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.red));
        }
        else
        {
            pm2.jLabel30.setForeground(java.awt.Color.green);
            pm2.jLabel30.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.green));
        }
        if(apron_international[30]!=0)
        {
            pm2.jLabel31.setForeground(java.awt.Color.red);
            pm2.jLabel31.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.red));
        }
        else
        {
            pm2.jLabel31.setForeground(java.awt.Color.green);
            pm2.jLabel31.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.green));
        }
        if(apron_international[31]!=0)
        {
            pm2.jLabel32.setForeground(java.awt.Color.red);
            pm2.jLabel32.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.red));
        }
        else
        {
            pm2.jLabel32.setForeground(java.awt.Color.green);
            pm2.jLabel32.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.green));
        }
        if(apron_international[32]!=0)
        {
            pm2.jLabel33.setForeground(java.awt.Color.red);
            pm2.jLabel33.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.red));
        }
        else
        {
            pm2.jLabel33.setForeground(java.awt.Color.green);
            pm2.jLabel33.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.green));
        }
        if(apron_international[33]!=0)
        {
            pm2.jLabel34.setForeground(java.awt.Color.red);
            pm2.jLabel34.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.red));
        }
        else
        {
            pm2.jLabel34.setForeground(java.awt.Color.green);
            pm2.jLabel34.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.green));
        }
        if(apron_international[34]!=0)
        {
            pm2.jLabel35.setForeground(java.awt.Color.red);
            pm2.jLabel35.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.red));
        }
        else
        {
            pm2.jLabel35.setForeground(java.awt.Color.green);
            pm2.jLabel35.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.green));
        }
        if(apron_international[35]!=0)
        {
            pm2.jLabel36.setForeground(java.awt.Color.red);
            pm2.jLabel36.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.red));
        }
        else
        {
            pm2.jLabel36.setForeground(java.awt.Color.green);
            pm2.jLabel36.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.green));
        }
        if(apron_international[36]!=0)
        {
            pm2.jLabel37.setForeground(java.awt.Color.red);
            pm2.jLabel37.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.red));
        }
        else
        {
            pm2.jLabel37.setForeground(java.awt.Color.green);
            pm2.jLabel37.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.green));
        }
        if(apron_international[37]!=0)
        {
            pm2.jLabel38.setForeground(java.awt.Color.red);
            pm2.jLabel38.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.red));
        }
        else
        {
            pm2.jLabel38.setForeground(java.awt.Color.green);
            pm2.jLabel38.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.green));
        }
        if(apron_international[38]!=0)
        {
            pm2.jLabel39.setForeground(java.awt.Color.red);
            pm2.jLabel39.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.red));
        }
        else
        {
            pm2.jLabel39.setForeground(java.awt.Color.green);
            pm2.jLabel39.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.green));
        }
        if(apron_international[39]!=0)
        {
            pm2.jLabel40.setForeground(java.awt.Color.red);
            pm2.jLabel40.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.red));
        }
        else
        {
            pm2.jLabel40.setForeground(java.awt.Color.green);
            pm2.jLabel40.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.green));
        }
        
        pm2.jLabel1.setText(" "+String.valueOf(apron_international[0])+" ");
        pm2.jLabel2.setText(" "+String.valueOf(apron_international[1])+" ");
        pm2.jLabel3.setText(" "+String.valueOf(apron_international[2])+" ");
        pm2.jLabel4.setText(" "+String.valueOf(apron_international[3])+" ");
        pm2.jLabel5.setText(" "+String.valueOf(apron_international[4])+" ");
        pm2.jLabel6.setText(" "+String.valueOf(apron_international[5])+" ");
        pm2.jLabel7.setText(" "+String.valueOf(apron_international[6])+" ");
        pm2.jLabel8.setText(" "+String.valueOf(apron_international[7])+" ");
        pm2.jLabel9.setText(" "+String.valueOf(apron_international[8])+" ");
        pm2.jLabel10.setText(" "+String.valueOf(apron_international[9])+" ");
        pm2.jLabel11.setText(" "+String.valueOf(apron_international[10])+" ");
        pm2.jLabel12.setText(" "+String.valueOf(apron_international[11])+" ");
        pm2.jLabel13.setText(" "+String.valueOf(apron_international[12])+" ");
        pm2.jLabel14.setText(" "+String.valueOf(apron_international[13])+" ");
        pm2.jLabel15.setText(" "+String.valueOf(apron_international[14])+" ");
        pm2.jLabel16.setText(" "+String.valueOf(apron_international[15])+" ");
        pm2.jLabel17.setText(" "+String.valueOf(apron_international[16])+" ");
        pm2.jLabel18.setText(" "+String.valueOf(apron_international[17])+" ");
        pm2.jLabel19.setText(" "+String.valueOf(apron_international[18])+" ");
        pm2.jLabel20.setText(" "+String.valueOf(apron_international[19])+" ");
        pm2.jLabel21.setText(" "+String.valueOf(apron_international[20])+" ");
        pm2.jLabel22.setText(" "+String.valueOf(apron_international[21])+" ");
        pm2.jLabel23.setText(" "+String.valueOf(apron_international[22])+" ");
        pm2.jLabel24.setText(" "+String.valueOf(apron_international[23])+" ");
        pm2.jLabel25.setText(" "+String.valueOf(apron_international[24])+" ");
        pm2.jLabel26.setText(" "+String.valueOf(apron_international[25])+" ");
        pm2.jLabel27.setText(" "+String.valueOf(apron_international[26])+" ");
        pm2.jLabel28.setText(" "+String.valueOf(apron_international[27])+" ");
        pm2.jLabel29.setText(" "+String.valueOf(apron_international[28])+" ");
        pm2.jLabel30.setText(" "+String.valueOf(apron_international[29])+" ");
        pm2.jLabel31.setText(" "+String.valueOf(apron_international[30])+" ");
        pm2.jLabel32.setText(" "+String.valueOf(apron_international[31])+" ");
        pm2.jLabel33.setText(" "+String.valueOf(apron_international[32])+" ");
        pm2.jLabel34.setText(" "+String.valueOf(apron_international[33])+" ");
        pm2.jLabel35.setText(" "+String.valueOf(apron_international[34])+" ");
        pm2.jLabel36.setText(" "+String.valueOf(apron_international[35])+" ");
        pm2.jLabel37.setText(" "+String.valueOf(apron_international[36])+" ");
        pm2.jLabel38.setText(" "+String.valueOf(apron_international[37])+" ");
        pm2.jLabel39.setText(" "+String.valueOf(apron_international[38])+" ");
        pm2.jLabel40.setText(" "+String.valueOf(apron_international[39])+" ");
        
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        
        pm3.setVisible(true);
        
        if(apron_cargo[0]!=0)
        {
            pm3.jLabel1.setForeground(java.awt.Color.red);
            pm3.jLabel1.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.red));
        }
        else
        {
            pm3.jLabel1.setForeground(java.awt.Color.green);
            pm3.jLabel1.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.green));
        }
        if(apron_cargo[1]!=0)
        {
            pm3.jLabel2.setForeground(java.awt.Color.red);
            pm3.jLabel2.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.red));
        }
        else
        {
            pm3.jLabel2.setForeground(java.awt.Color.green);
            pm3.jLabel2.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.green));
        }
        if(apron_cargo[2]!=0)
        {
            pm3.jLabel3.setForeground(java.awt.Color.red);
            pm3.jLabel3.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.red));
        }
        else
        {
            pm3.jLabel3.setForeground(java.awt.Color.green);
            pm3.jLabel3.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.green));
        }
        if(apron_cargo[3]!=0)
        {
            pm3.jLabel4.setForeground(java.awt.Color.red);
            pm3.jLabel4.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.red));
        }
        else
        {
            pm3.jLabel4.setForeground(java.awt.Color.green);
            pm3.jLabel4.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.green));
        }
        if(apron_cargo[4]!=0)
        {
            pm3.jLabel5.setForeground(java.awt.Color.red);
            pm3.jLabel5.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.red));
        }
        else
        {
            pm3.jLabel5.setForeground(java.awt.Color.green);
            pm3.jLabel5.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.green));
        }
        if(apron_cargo[5]!=0)
        {
            pm3.jLabel6.setForeground(java.awt.Color.red);
            pm3.jLabel6.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.red));
        }
        else
        {
            pm3.jLabel6.setForeground(java.awt.Color.green);
            pm3.jLabel6.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.green));
        }
        if(apron_cargo[6]!=0)
        {
            pm3.jLabel7.setForeground(java.awt.Color.red);
            pm3.jLabel7.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.red));
        }
        else
        {
            pm3.jLabel7.setForeground(java.awt.Color.green);
            pm3.jLabel7.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.green));
        }
        if(apron_cargo[7]!=0)
        {
            pm3.jLabel8.setForeground(java.awt.Color.red);
            pm3.jLabel8.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.red));
        }
        else
        {
            pm3.jLabel8.setForeground(java.awt.Color.green);
            pm3.jLabel8.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.green));
        }
        if(apron_cargo[8]!=0)
        {
            pm3.jLabel9.setForeground(java.awt.Color.red);
            pm3.jLabel9.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.red));
        }
        else
        {
            pm3.jLabel9.setForeground(java.awt.Color.green);
            pm3.jLabel9.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.green));
        }
        if(apron_cargo[9]!=0)
        {
            pm3.jLabel10.setForeground(java.awt.Color.red);
            pm3.jLabel10.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.red));
        }
        else
        {
            pm3.jLabel10.setForeground(java.awt.Color.green);
            pm3.jLabel10.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.green));
        }
        if(apron_cargo[10]!=0)
        {
            pm3.jLabel11.setForeground(java.awt.Color.red);
            pm3.jLabel11.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.red));
        }
        else
        {
            pm3.jLabel11.setForeground(java.awt.Color.green);
            pm3.jLabel11.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.green));
        }
        if(apron_cargo[11]!=0)
        {
            pm3.jLabel12.setForeground(java.awt.Color.red);
            pm3.jLabel12.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.red));
        }
        else
        {
            pm3.jLabel12.setForeground(java.awt.Color.green);
            pm3.jLabel12.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.green));
        }
        if(apron_cargo[12]!=0)
        {
            pm3.jLabel13.setForeground(java.awt.Color.red);
            pm3.jLabel13.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.red));
        }
        else
        {
            pm3.jLabel13.setForeground(java.awt.Color.green);
            pm3.jLabel13.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.green));
        }
        if(apron_cargo[13]!=0)
        {
            pm3.jLabel14.setForeground(java.awt.Color.red);
            pm3.jLabel14.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.red));
        }
        else
        {
            pm3.jLabel14.setForeground(java.awt.Color.green);
            pm3.jLabel14.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.green));
        }
        if(apron_cargo[14]!=0)
        {
            pm3.jLabel15.setForeground(java.awt.Color.red);
            pm3.jLabel15.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.red));
        }
        else
        {
            pm3.jLabel15.setForeground(java.awt.Color.green);
            pm3.jLabel15.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.green));
        }
        if(apron_cargo[15]!=0)
        {
            pm3.jLabel16.setForeground(java.awt.Color.red);
            pm3.jLabel16.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.red));
        }
        else
        {
            pm3.jLabel16.setForeground(java.awt.Color.green);
            pm3.jLabel16.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.green));
        }
        if(apron_cargo[16]!=0)
        {
            pm3.jLabel17.setForeground(java.awt.Color.red);
            pm3.jLabel17.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.red));
        }
        else
        {
            pm3.jLabel17.setForeground(java.awt.Color.green);
            pm3.jLabel17.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.green));
        }
        if(apron_cargo[17]!=0)
        {
            pm3.jLabel18.setForeground(java.awt.Color.red);
            pm3.jLabel18.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.red));
        }
        else
        {
            pm3.jLabel18.setForeground(java.awt.Color.green);
            pm3.jLabel18.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.green));
        }
        if(apron_cargo[18]!=0)
        {
            pm3.jLabel19.setForeground(java.awt.Color.red);
            pm3.jLabel19.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.red));
        }
        else
        {
            pm3.jLabel19.setForeground(java.awt.Color.green);
            pm3.jLabel19.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.green));
        }
        if(apron_cargo[19]!=0)
        {
            pm3.jLabel20.setForeground(java.awt.Color.red);
            pm3.jLabel20.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.red));
        }
        else
        {
            pm3.jLabel20.setForeground(java.awt.Color.green);
            pm3.jLabel20.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.green));
        }
        
        if(apron_cargo[20]!=0)
        {
            pm3.jLabel21.setForeground(java.awt.Color.red);
            pm3.jLabel21.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.red));
        }
        else
        {
            pm3.jLabel21.setForeground(java.awt.Color.green);
            pm3.jLabel21.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.green));
        }
        if(apron_cargo[21]!=0)
        {
            pm3.jLabel22.setForeground(java.awt.Color.red);
            pm3.jLabel22.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.red));
        }
        else
        {
            pm3.jLabel22.setForeground(java.awt.Color.green);
            pm3.jLabel22.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.green));
        }
        if(apron_cargo[22]!=0)
        {
            pm3.jLabel23.setForeground(java.awt.Color.red);
            pm3.jLabel23.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.red));
        }
        else
        {
            pm3.jLabel23.setForeground(java.awt.Color.green);
            pm3.jLabel23.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.green));
        }
        if(apron_cargo[23]!=0)
        {
            pm3.jLabel24.setForeground(java.awt.Color.red);
            pm3.jLabel24.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.red));
        }
        else
        {
            pm3.jLabel24.setForeground(java.awt.Color.green);
            pm3.jLabel24.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.green));
        }
        if(apron_cargo[24]!=0)
        {
            pm3.jLabel25.setForeground(java.awt.Color.red);
            pm3.jLabel25.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.red));
        }
        else
        {
            pm3.jLabel25.setForeground(java.awt.Color.green);
            pm3.jLabel25.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.green));
        }
        if(apron_cargo[25]!=0)
        {
            pm3.jLabel26.setForeground(java.awt.Color.red);
            pm3.jLabel26.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.red));
        }
        else
        {
            pm3.jLabel26.setForeground(java.awt.Color.green);
            pm3.jLabel26.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.green));
        }
        if(apron_cargo[26]!=0)
        {
            pm3.jLabel27.setForeground(java.awt.Color.red);
            pm3.jLabel27.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.red));
        }
        else
        {
            pm3.jLabel27.setForeground(java.awt.Color.green);
            pm3.jLabel27.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.green));
        }
        if(apron_cargo[27]!=0)
        {
            pm3.jLabel28.setForeground(java.awt.Color.red);
            pm3.jLabel28.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.red));
        }
        else
        {
            pm3.jLabel28.setForeground(java.awt.Color.green);
            pm3.jLabel28.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.green));
        }
        if(apron_cargo[28]!=0)
        {
            pm3.jLabel29.setForeground(java.awt.Color.red);
            pm3.jLabel29.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.red));
        }
        else
        {
            pm3.jLabel29.setForeground(java.awt.Color.green);
            pm3.jLabel29.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.green));
        }
        if(apron_cargo[29]!=0)
        {
            pm3.jLabel30.setForeground(java.awt.Color.red);
            pm3.jLabel30.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.red));
        }
        else
        {
            pm3.jLabel30.setForeground(java.awt.Color.green);
            pm3.jLabel30.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.green));
        }
        if(apron_cargo[30]!=0)
        {
            pm3.jLabel31.setForeground(java.awt.Color.red);
            pm3.jLabel31.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.red));
        }
        else
        {
            pm3.jLabel31.setForeground(java.awt.Color.green);
            pm3.jLabel31.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.green));
        }
        if(apron_cargo[31]!=0)
        {
            pm3.jLabel32.setForeground(java.awt.Color.red);
            pm3.jLabel32.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.red));
        }
        else
        {
            pm3.jLabel32.setForeground(java.awt.Color.green);
            pm3.jLabel32.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.green));
        }
        if(apron_cargo[32]!=0)
        {
            pm3.jLabel33.setForeground(java.awt.Color.red);
            pm3.jLabel33.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.red));
        }
        else
        {
            pm3.jLabel33.setForeground(java.awt.Color.green);
            pm3.jLabel33.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.green));
        }
        if(apron_cargo[33]!=0)
        {
            pm3.jLabel34.setForeground(java.awt.Color.red);
            pm3.jLabel34.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.red));
        }
        else
        {
            pm3.jLabel34.setForeground(java.awt.Color.green);
            pm3.jLabel34.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.green));
        }
        if(apron_cargo[34]!=0)
        {
            pm3.jLabel35.setForeground(java.awt.Color.red);
            pm3.jLabel35.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.red));
        }
        else
        {
            pm3.jLabel35.setForeground(java.awt.Color.green);
            pm3.jLabel35.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.green));
        }
        if(apron_cargo[35]!=0)
        {
            pm3.jLabel36.setForeground(java.awt.Color.red);
            pm3.jLabel36.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.red));
        }
        else
        {
            pm3.jLabel36.setForeground(java.awt.Color.green);
            pm3.jLabel36.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.green));
        }
        if(apron_cargo[36]!=0)
        {
            pm3.jLabel37.setForeground(java.awt.Color.red);
            pm3.jLabel37.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.red));
        }
        else
        {
            pm3.jLabel37.setForeground(java.awt.Color.green);
            pm3.jLabel37.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.green));
        }
        if(apron_cargo[37]!=0)
        {
            pm3.jLabel38.setForeground(java.awt.Color.red);
            pm3.jLabel38.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.red));
        }
        else
        {
            pm3.jLabel38.setForeground(java.awt.Color.green);
            pm3.jLabel38.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.green));
        }
        if(apron_cargo[38]!=0)
        {
            pm3.jLabel39.setForeground(java.awt.Color.red);
            pm3.jLabel39.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.red));
        }
        else
        {
            pm3.jLabel39.setForeground(java.awt.Color.green);
            pm3.jLabel39.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.green));
        }
        if(apron_cargo[39]!=0)
        {
            pm3.jLabel40.setForeground(java.awt.Color.red);
            pm3.jLabel40.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.red));
        }
        else
        {
            pm3.jLabel40.setForeground(java.awt.Color.green);
            pm3.jLabel40.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.green));
        }
        
        pm3.jLabel1.setText(" "+String.valueOf(apron_cargo[0])+" ");
        pm3.jLabel2.setText(" "+String.valueOf(apron_cargo[1])+" ");
        pm3.jLabel3.setText(" "+String.valueOf(apron_cargo[2])+" ");
        pm3.jLabel4.setText(" "+String.valueOf(apron_cargo[3])+" ");
        pm3.jLabel5.setText(" "+String.valueOf(apron_cargo[4])+" ");
        pm3.jLabel6.setText(" "+String.valueOf(apron_cargo[5])+" ");
        pm3.jLabel7.setText(" "+String.valueOf(apron_cargo[6])+" ");
        pm3.jLabel8.setText(" "+String.valueOf(apron_cargo[7])+" ");
        pm3.jLabel9.setText(" "+String.valueOf(apron_cargo[8])+" ");
        pm3.jLabel10.setText(" "+String.valueOf(apron_cargo[9])+" ");
        pm3.jLabel11.setText(" "+String.valueOf(apron_cargo[10])+" ");
        pm3.jLabel12.setText(" "+String.valueOf(apron_cargo[11])+" ");
        pm3.jLabel13.setText(" "+String.valueOf(apron_cargo[12])+" ");
        pm3.jLabel14.setText(" "+String.valueOf(apron_cargo[13])+" ");
        pm3.jLabel15.setText(" "+String.valueOf(apron_cargo[14])+" ");
        pm3.jLabel16.setText(" "+String.valueOf(apron_cargo[15])+" ");
        pm3.jLabel17.setText(" "+String.valueOf(apron_cargo[16])+" ");
        pm3.jLabel18.setText(" "+String.valueOf(apron_cargo[17])+" ");
        pm3.jLabel19.setText(" "+String.valueOf(apron_cargo[18])+" ");
        pm3.jLabel20.setText(" "+String.valueOf(apron_cargo[19])+" ");
        pm3.jLabel21.setText(" "+String.valueOf(apron_cargo[20])+" ");
        pm3.jLabel22.setText(" "+String.valueOf(apron_cargo[21])+" ");
        pm3.jLabel23.setText(" "+String.valueOf(apron_cargo[22])+" ");
        pm3.jLabel24.setText(" "+String.valueOf(apron_cargo[23])+" ");
        pm3.jLabel25.setText(" "+String.valueOf(apron_cargo[24])+" ");
        pm3.jLabel26.setText(" "+String.valueOf(apron_cargo[25])+" ");
        pm3.jLabel27.setText(" "+String.valueOf(apron_cargo[26])+" ");
        pm3.jLabel28.setText(" "+String.valueOf(apron_cargo[27])+" ");
        pm3.jLabel29.setText(" "+String.valueOf(apron_cargo[28])+" ");
        pm3.jLabel30.setText(" "+String.valueOf(apron_cargo[29])+" ");
        pm3.jLabel31.setText(" "+String.valueOf(apron_cargo[30])+" ");
        pm3.jLabel32.setText(" "+String.valueOf(apron_cargo[31])+" ");
        pm3.jLabel33.setText(" "+String.valueOf(apron_cargo[32])+" ");
        pm3.jLabel34.setText(" "+String.valueOf(apron_cargo[33])+" ");
        pm3.jLabel35.setText(" "+String.valueOf(apron_cargo[34])+" ");
        pm3.jLabel36.setText(" "+String.valueOf(apron_cargo[35])+" ");
        pm3.jLabel37.setText(" "+String.valueOf(apron_cargo[36])+" ");
        pm3.jLabel38.setText(" "+String.valueOf(apron_cargo[37])+" ");
        pm3.jLabel39.setText(" "+String.valueOf(apron_cargo[38])+" ");
        pm3.jLabel40.setText(" "+String.valueOf(apron_cargo[39])+" ");
        
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        Messaging msg=new Messaging();
        msg.setVisible(true);
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Menu1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Menu1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Menu1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Menu1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Menu1().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel2;
    // End of variables declaration//GEN-END:variables
}
